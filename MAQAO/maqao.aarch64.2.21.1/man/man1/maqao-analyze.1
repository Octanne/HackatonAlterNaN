.\" File generated using by MAQAO.
.TH MAQAO-ANALYZE "1" "2025/01/21" "MAQAO-ANALYZE 2.21.1" "User Commands"
.SH NAME
maqao-analyze \- manual page for maqao analyze module.
.SH SYNOPSIS
maqao analyze -lf|-ll|-li|-g <binary> [options]
.SH DESCRIPTION
This module displays the results of the static analysis performed on the binary.
.SH OPTIONS
.TP
\fB\-lf\fR, \fB\-\-list-functions\fR
List all functions in the binary.
.TP
\fB\-ll\fR, \fB\-\-list-loops\fR
List all loops per function in the binary.
.TP
\fB\-li\fR, \fB\-\-list-instructions\fR
List all instructions per function and loop in the binary.
.SH "    GROUPING ANALYSIS"
.TP
\fB\-g\fR, \fB\-\-grouping\fR
Run grouping analysis. Type maqao analyze -g --help for more detailed help
.SH "    FILTERING RESULTS"
.TP
\fB\-\-fct\fR\=<function>
Filter results using <function>, which is interpreted as a Lua regular expression. The regular expression format is available in the Lua 5.1 documentation. For --list-functions, this will restrict the output to the functions with a matching name. For --list-loops and --list-instructions, this will restrict the output to respectively the loops and instructions contained in a function with a matching name.
.TP
\fB\-\-loop-ids\fR\=<vals>
Filter results using <vals>, expected as a list of loop identifiers separated by commas (','). For --list-loops, this will restrict the output to the loops whose identifier is in the list. For --list-instructions, this will restrict the output to the instructions contained in a loop whose identifier is in the list.
.TP
\fB\-\-loop-depth\fR\=<val>
Filter results to only get loops with a given hierarchy level. 
.br
If <val> is an integer, only loops with a depth of <val> are displayed. 
.br
If <val> is "innermost", "in-between", or "outermost", only <val> loops will be displayed.
.SH "    OUTPUT DISPLAY"
.TP
\fB\-\-show-hierarchy\fR\=<show>
Allows to display the results following loop hierarchy instead of as a flat list It is only used when listing loops or instructions. Available values are: 
.TP 20 
\fB       on\fR  (default)
Enabling
.TP 20 
\fB       off\fR 
Disabling
.
.SH ""
.TP
\fB\-\-show-extra-info\fR\=<show>
Display extra information: file and source lines if available, and assembly ranges for functions, loops and blocks. Available values are: 
.TP 20 
\fB       on\fR 
Enabling
.TP 20 
\fB       off\fR  (default)
Disabling
.
.SH ""
.TP
\fB\-\-show-compil-info\fR\=<show>
Display the compilation information (if available) for functions. Available values are: 
.TP 20 
\fB       on\fR 
Enabling
.TP 20 
\fB       off\fR  (default)
Disabling
.
.SH ""
.TP
\fB\-\-show-empty-functions\fR\=<show>
Displays a function name even if it does not contain a matching loop. This option is ignored when listing instructions. Available values are: 
.TP 20 
\fB       on\fR  (default)
Enabling
.TP 20 
\fB       off\fR 
Disabling
.
.SH ""
.TP
\fB\-\-display-separators\fR\=<show>
Displays a line separator between each function.. This option is ignored when listing instructions. Available values are: 
.TP 20 
\fB       on\fR  (default)
Enabling
.TP 20 
\fB       off\fR 
Disabling
.
.SH ""
.TP
\fB\-\-cfg\fR[\=<path>]
Instead of listing loops and functions, generate the CFG of selected objects using .dot format in files named [<path>/]cfg_<object_type>_<id>.dot
.SH "    GROUPING OPTIONS"
.TP
\fB\-\-vect-only\fR
Looks only for groups containing vectorial instructions (SSE or AVX).
.TP
\fB\-\-SSE-only\fR
Looks only for groups containing SSE instructions.
.TP
\fB\-\-AVX-only\fR
Looks only for groups containing AVX instructions.
.SH "    MAN PAGE"
.TP
\fB\-\-generate-man\fR
Generate the man page of the module based on the module help in the current directory. The generated file is called maqao-<module>.1. Once the man page is generated, the program exits.
.TP
\fB\-\-generate-man-all\fR
Generate man pages for all modules available based on each module help in the current directory. Each generated file is called maqao-<module>.1. Once the man pages are generated, the program exits.
.TP
\fB\-\-output\fR\=<path>
Specify the path where the man page is generated.
.TP
\fB\-\-generate-wiki\fR
Generate the wiki page of the module based on the module help on the standard output. Once the man page is generated, the program exits.
.SH "    OPTIONAL FLAGS COMMON TO ALL MODULES"
.TP
\fB\-\-arch\fR\=<architecture>
Select the architecture used for analysis. Available values are: 
aarch64.

.TP
\fB\-\-disable-debug\fR
Disable debug data loading. WARNING, this option may alter the tool's accuracy.
.TP
\fB\-\-compiler\fR\=<compiler>
Select the compiler used to create the binary. Available values are: 
GNU, Intel.

.TP
\fB\-\-language\fR\=<language>
Select the source language. Available values are: 
c, c++, fortran.

.TP
\fB\-\-lcore-flow-all\fR
Analyze all instructions returned by MADRAS. Default behaviour is to analyze instructions from sections .text, .init, .fini and .madras.code. 
.TP
\fB\-\-uarch\fR\=<uarch>
Select the micro architecture used for analysis. Available values are: 
.TP 20 
\fB       For aarch64 architecture:\fR 
ARM_CORTEX_A34 (), ARM_CORTEX_A35 (), ARM_CORTEX_A510 (), ARM_CORTEX_A53 (), ARM_CORTEX_A55 (),             ARM_CORTEX_A57 (), ARM_CORTEX_A65 (), ARM_CORTEX_A65AE (), ARM_CORTEX_A710 (), ARM_CORTEX_A715 (),             ARM_CORTEX_A72 (), ARM_CORTEX_A73 (), ARM_CORTEX_A75 (), ARM_CORTEX_A76 (), ARM_CORTEX_A76AE (),             ARM_CORTEX_A77 (), ARM_CORTEX_A78 (), ARM_CORTEX_A78AE (), ARM_CORTEX_X1 (), ARM_CORTEX_X2 (),             ARM_CORTEX_X3 (), ARM_NEOVERSE_E1 (), ARM_NEOVERSE_N1 (), ARM_NEOVERSE_N2 (), ARM_NEOVERSE_V1 (),             ARM_NEOVERSE_V2 (), CAVIUM_THUNDERX (), CAVIUM_THUNDERX2 (), FUJITSU_A64FX ()
.
.SH ""
.TP
\fB\-\-proc\fR\=<proc>
Select the processor model used for analysis. maqao --list-procs to display supported processors
.TP
\fB\-ifr\fR, \fB\-\-interleaved-functions-recognition\fR\=<mode>
Select the mode of interleaved functions recognition. Available values are: 
.TP 20 
\fB       off\fR 
Functions are not extracted from connected components.
.TP 20 
\fB       debug_based\fR  (default)
Functions are extracted from connected components matching with debug data.
.TP 20 
\fB       all\fR 
All connected components are extracted into new functions whether they correspond to the debug information or not.
.
.SH ""
.TP
\fB\-dbg\fR, \fB\-\-debug\fR[\=<level>]
Enable debug messages. <level> can be used to specify the level of debug messages to display. Available values are: 
0, 1 (default).

.TP
\fB\-\-\fR
Specify binary parameters for dynamic analysis. Next options are ignored by MAQAO.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print the current help.
.TP
\fB\-v\fR, \fB\-\-version\fR
Print the current version.
.SH EXAMPLES
.TP
maqao analyze -lf -fct=foo -cfg=./tmp ./my_app
Generate CFG files in directory \fB./tmp\fR for functions whose name matches the substring \fBfoo\fR 
.SH AUTHOR
Written by The MAQAO team.
.SH "REPORTING BUGS"
Report bugs to <contact@maqao.org>.
.SH COPYRIGHT
MAQAO (C), 2004 - 2025 Universite de Versailles Saint-Quentin-en-Yvelines (UVSQ), 
is distributed under the GNU Lesser General Public License (GNU LGPL). MAQAO is 
free software; you can use it under the terms of the GNU Lesser General 
Public License as published by the Free Software Foundation; either version 2.1 
of the License, or (at your option) any later version. This software is distributed 
in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the 
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
GNU Lesser General Public License for more details.

The full legal text of the GNU Lesser General Public License (GNU LGPL) is available
at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
.SH "SEE ALSO"
maqao(1), maqao-madras(1), maqao-cqa(1), maqao-disass(1), maqao-lprof(1), maqao-oneview(1), maqao-otter(1)
