In file included from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/simd:74,
                 from BSM.cxx:71:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h: In instantiation of ‘std::enable_if_t<((simd_size_v<typename _V::value_type, _Ap> == (_Parts * _V::size())) && is_simd_v<_V>), std::array<_V, _Parts> > std::experimental::parallelism_v2::split(const simd<typename _V::value_type, _Ap>&) [with _V = simd<float, simd_abi::_VecBuiltin<8> >; _Ap = simd_abi::_VecBuiltin<16>; long unsigned int _Parts = 2; std::enable_if_t<((simd_size_v<typename _V::value_type, _Ap> == (_Parts * _V::size())) && is_simd_v<_V>), std::array<_V, _Parts> > = std::array<simd<float, simd_abi::_VecBuiltin<8> >, 2>; typename _V::value_type = float]’:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h:96:61:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplNeon<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<16>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:3746:38:   required from ‘_Tp std::experimental::parallelism_v2::reduce(const simd<_Tp, _Ap>&, _BinaryOperation) [with _Tp = float; _Abi = simd_abi::_VecBuiltin<16>; _BinaryOperation = std::plus<void>]’
BSM.cxx:152:44:   required from here
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:4002:3: note: parameter passing for argument of type ‘std::array<std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_VecBuiltin<8> >, 2>’ when C++17 is enabled changed to match C++14 in GCC 10.1
 4002 |   split(const simd<typename _V::value_type, _Ap>& __x)
      |   ^~~~~
In file included from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/string:49,
                 from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/locale_classes.h:40,
                 from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/ios_base.h:41,
                 from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/ios:44,
                 from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/ostream:40,
                 from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/iostream:41,
                 from BSM.cxx:60:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/stl_function.h: In instantiation of ‘constexpr decltype ((forward<_Tp>(__t) + forward<_Up>(__u))) std::plus<void>::operator()(_Tp&&, _Up&&) const [with _Tp = std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>&; _Up = std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>; decltype ((forward<_Tp>(__t) + forward<_Up>(__u))) = std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>]’:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_builtin.h:1855:27:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplBuiltin<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<16>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h:126:25:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplNeon<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<16>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:3746:38:   required from ‘_Tp std::experimental::parallelism_v2::reduce(const simd<_Tp, _Ap>&, _BinaryOperation) [with _Tp = float; _Abi = simd_abi::_VecBuiltin<16>; _BinaryOperation = std::plus<void>]’
BSM.cxx:152:44:   required from here
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/stl_function.h:254:9: note: parameter passing for argument of type ‘std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>’ when C++17 is enabled changed to match C++14 in GCC 10.1
  254 |         operator()(_Tp&& __t, _Up&& __u) const
      |         ^~~~~~~~
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h: In instantiation of ‘constexpr _R std::experimental::parallelism_v2::__execute_on_index_sequence_with_return(_Fp&&, std::index_sequence<_Idx ...>) [with _R = std::array<simd<float, simd_abi::_VecBuiltin<8> >, 2>; _Fp = split<simd<float, simd_abi::_VecBuiltin<8> >, simd_abi::_VecBuiltin<16> >(const simd<float, simd_abi::_VecBuiltin<16> >&)::<lambda(auto:51)>; long unsigned int ..._I = {0, 1}; std::index_sequence<_Idx ...> = std::integer_sequence<long unsigned int, 0, 1>]’:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:454:55:   required from ‘constexpr _R std::experimental::parallelism_v2::__generate_from_n_evaluations(_Fp&&) [with long unsigned int _Np = 2; _R = std::array<simd<float, simd_abi::_VecBuiltin<8> >, 2>; _Fp = split<simd<float, simd_abi::_VecBuiltin<8> >, simd_abi::_VecBuiltin<16> >(const simd<float, simd_abi::_VecBuiltin<16> >&)::<lambda(auto:51)>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:4011:65:   required from ‘std::enable_if_t<((simd_size_v<typename _V::value_type, _Ap> == (_Parts * _V::size())) && is_simd_v<_V>), std::array<_V, _Parts> > std::experimental::parallelism_v2::split(const simd<typename _V::value_type, _Ap>&) [with _V = simd<float, simd_abi::_VecBuiltin<8> >; _Ap = simd_abi::_VecBuiltin<16>; long unsigned int _Parts = 2; std::enable_if_t<((simd_size_v<typename _V::value_type, _Ap> == (_Parts * _V::size())) && is_simd_v<_V>), std::array<_V, _Parts> > = std::array<simd<float, simd_abi::_VecBuiltin<8> >, 2>; typename _V::value_type = float]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h:96:61:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplNeon<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<16>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:3746:38:   required from ‘_Tp std::experimental::parallelism_v2::reduce(const simd<_Tp, _Ap>&, _BinaryOperation) [with _Tp = float; _Abi = simd_abi::_VecBuiltin<16>; _BinaryOperation = std::plus<void>]’
BSM.cxx:152:44:   required from here
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:447:3: note: parameter passing for argument of type ‘std::array<std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_VecBuiltin<8> >, 2>’ when C++17 is enabled changed to match C++14 in GCC 10.1
  447 |   __execute_on_index_sequence_with_return(_Fp&& __f, index_sequence<_I...>)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/stl_function.h: In instantiation of ‘constexpr decltype ((forward<_Tp>(__t) + forward<_Up>(__u))) std::plus<void>::operator()(_Tp&&, _Up&&) const [with _Tp = std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>; _Up = std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>; decltype ((forward<_Tp>(__t) + forward<_Up>(__u))) = std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>]’:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_builtin.h:1849:22:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplBuiltin<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<8>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h:126:25:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplNeon<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<8>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h:98:54:   required from ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplNeon<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<16>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd.h:3746:38:   required from ‘_Tp std::experimental::parallelism_v2::reduce(const simd<_Tp, _Ap>&, _BinaryOperation) [with _Tp = float; _Abi = simd_abi::_VecBuiltin<16>; _BinaryOperation = std::plus<void>]’
BSM.cxx:152:44:   required from here
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/bits/stl_function.h:254:9: note: parameter passing for argument of type ‘std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_Scalar>’ when C++17 is enabled changed to match C++14 in GCC 10.1
  254 |         operator()(_Tp&& __t, _Up&& __u) const
      |         ^~~~~~~~
In file included from /tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/simd:82:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h: In static member function ‘static constexpr _Tp std::experimental::parallelism_v2::_SimdImplNeon<_Abi, <template-parameter-1-2> >::_S_reduce(std::experimental::parallelism_v2::simd<_Tp, _Abi>, _BinaryOperation&&) [with _Tp = float; _BinaryOperation = std::plus<void>&; _Abi = std::experimental::parallelism_v2::simd_abi::_VecBuiltin<16>; <template-parameter-1-2> = std::experimental::parallelism_v2::__detail::_MachineFlagsTemplate<15, 10>]’:
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/include/c++/13.2.0/experimental/bits/simd_neon.h:96:28: note: parameter passing for argument of type ‘std::array<std::experimental::parallelism_v2::simd<float, std::experimental::parallelism_v2::simd_abi::_VecBuiltin<8> >, 2>’ when C++17 is enabled changed to match C++14 in GCC 10.1
   96 |                 const auto __halves = split<simd<_Tp, simd_abi::_Neon<8>>>(__x);
      |                            ^~~~~~~~
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/bin/../lib/gcc/aarch64-linux-gnu/13.2.0/../../../../aarch64-linux-gnu/bin/ld: /tmp/ccipLBu9.o: in function `main':
BSM.cxx:(.text.startup+0x100): undefined reference to `boost::random::random_device::random_device()'
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/bin/../lib/gcc/aarch64-linux-gnu/13.2.0/../../../../aarch64-linux-gnu/bin/ld: BSM.cxx:(.text.startup+0x108): undefined reference to `boost::random::random_device::operator()()'
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/bin/../lib/gcc/aarch64-linux-gnu/13.2.0/../../../../aarch64-linux-gnu/bin/ld: BSM.cxx:(.text.startup+0x35c): undefined reference to `boost::random::random_device::~random_device()'
/tools/acfl/24.04/gcc-13.2.0_AmazonLinux-2/bin/../lib/gcc/aarch64-linux-gnu/13.2.0/../../../../aarch64-linux-gnu/bin/ld: BSM.cxx:(.text.startup+0x39c): undefined reference to `boost::random::random_device::~random_device()'
collect2: error: ld returned 1 exit status
