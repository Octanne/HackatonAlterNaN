WARNING: If MPI_Abort is called during execution, result files could not be copied.
Running: mpiexec -n 2 --tag-output /opt/aster/install/mpi/bin/run_aster -n 2 --wrkdir /tmp/run_aster_q244dsre --status-file /home/aster/.tmp_run_aster/run_aster_xpyhu4rj/__status__ --no-mpi /home/aster/.tmp_run_aster/run_aster_xpyhu4rj/Cube_perf.0
[1,0]<stdout>:
[1,0]<stdout>:# ------------------------------------------------------------------------------
[1,0]<stdout>:Execution of code_aster
[1,0]<stdout>:
[1,0]<stdout>:# ------------------------------------------------------------------------------
[1,0]<stdout>:Prepare environment in /tmp/run_aster_q244dsre/proc.0
[1,0]<stdout>:
[1,0]<stdout>:# ------------------------------------------------------------------------------
[1,0]<stdout>:Command file #1 / 1
[1,0]<stdout>:
[1,0]<stdout>:Content of the file to execute:
[1,0]<stdout>:# coding=utf-8
[1,0]<stdout>:#!/usr/bin/python
[1,0]<stdout>:
[1,0]<stdout>:import os
[1,0]<stdout>:from statistics import mean
[1,0]<stdout>:from datetime import datetime
[1,0]<stdout>:from resource import RUSAGE_SELF, getrusage
[1,0]<stdout>:
[1,0]<stdout>:from code_aster.Commands import *
[1,0]<stdout>:from code_aster import CA
[1,0]<stdout>:from code_aster.Utilities import petscInitialize
[1,0]<stdout>:
[1,0]<stdout>:CA.init()
[1,0]<stdout>:
[1,0]<stdout>:params = {}
[1,0]<stdout>:params["refinements"] = int(os.environ.get("REFINE", 1))
[1,0]<stdout>:params["parallel"] = os.environ.get("USE_LEGACY", "HPC")
[1,0]<stdout>:params["solver"] = os.environ.get("SOLVER", "PETSC")
[1,0]<stdout>:
[1,0]<stdout>:# General parameters
[1,0]<stdout>:comm = CA.MPI.ASTER_COMM_WORLD
[1,0]<stdout>:rank = comm.Get_rank()
[1,0]<stdout>:size = comm.Get_size()
[1,0]<stdout>:
[1,0]<stdout>:nbHexa = 8 ** params["refinements"]
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:def memory_peak(mess=None):
[1,0]<stdout>:    """Return memory peak in MB"""
[1,0]<stdout>:    return int(getrusage(RUSAGE_SELF).ru_maxrss / 1024)
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:class ChronoCtxMgGen:
[1,0]<stdout>:    stats = {}
[1,0]<stdout>:
[1,0]<stdout>:    def __init__(self, what):
[1,0]<stdout>:        self._what = what
[1,0]<stdout>:
[1,0]<stdout>:    def __enter__(self):
[1,0]<stdout>:        self.start = datetime.now()
[1,0]<stdout>:
[1,0]<stdout>:    def __exit__(self, exctype, exc, tb):
[1,0]<stdout>:        self.stop = datetime.now()
[1,0]<stdout>:        delta = self.stop - self.start
[1,0]<stdout>:        mem = memory_peak(self._what)
[1,0]<stdout>:        self.stats[self._what] = [delta.total_seconds(), mem]
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:class ChronoCtxMg(ChronoCtxMgGen):
[1,0]<stdout>:    pass
[1,0]<stdout>:    # def __init__(self, what):
[1,0]<stdout>:    #     ChronoCtxMgGen.__init__(self, what)
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:def write_stats(nume_ddl):
[1,0]<stdout>:    if rank == 0:
[1,0]<stdout>:        print("TITLE: TEST PERF CUBE")
[1,0]<stdout>:        print()
[1,0]<stdout>:        print("NB PROC")
[1,0]<stdout>:        print(size)
[1,0]<stdout>:        print()
[1,0]<stdout>:        print(
[1,0]<stdout>:            "COMMAND, TIME MIN (s), TIME MAX (s), TIME MEAN (s), MEM MIN (Mo), MEM MAX (Mo), MEM MEAN (Mo)"
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    for key, values in stats.items():
[1,0]<stdout>:        time = comm.gather(values[0], root=0)
[1,0]<stdout>:        mem = comm.gather(values[1], root=0)
[1,0]<stdout>:        if rank == 0:
[1,0]<stdout>:            print(
[1,0]<stdout>:                key
[1,0]<stdout>:                + ", "
[1,0]<stdout>:                + str(min(time))
[1,0]<stdout>:                + ", "
[1,0]<stdout>:                + str(max(time))
[1,0]<stdout>:                + ", "
[1,0]<stdout>:                + str(mean(time))
[1,0]<stdout>:                + ", "
[1,0]<stdout>:                + str(min(mem))
[1,0]<stdout>:                + ", "
[1,0]<stdout>:                + str(max(mem))
[1,0]<stdout>:                + ", "
[1,0]<stdout>:                + str(m[1,0]<stdout>:ean(mem))
[1,0]<stdout>:            )
[1,0]<stdout>:
[1,0]<stdout>:    mesh = nume_ddl.getMesh()
[1,0]<stdout>:    nodes = len(mesh.getInnerNodes())
[1,0]<stdout>:    nodes = comm.allreduce(nodes, CA.MPI.SUM)
[1,0]<stdout>:
[1,0]<stdout>:    if rank == 0:
[1,0]<stdout>:        print()
[1,0]<stdout>:        print("NB CELLS, NB NODES, NB DOFS")
[1,0]<stdout>:        print(str(nbHexa) + ", " + str(nodes) + ", " + str(nume_ddl.getNumberOfDofs()))
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:def print_markdown_table(data, refine, nbcells, nbnodes, nbdofs):
[1,0]<stdout>:    """Print a table of the mean time as a Markdown table."""
[1,0]<stdout>:
[1,0]<stdout>:    def show(*args, **kwargs):
[1,0]<stdout>:        if rank == 0:
[1,0]<stdout>:            print(*args, **kwargs)
[1,0]<stdout>:
[1,0]<stdout>:    fmti = "| {0:<16s} | {1:11,d} |"
[1,0]<stdout>:    fmtt = "| {0:<16s} | {1:11.2f} |"
[1,0]<stdout>:    separ = "| :--------------- | ----------: |"
[1,0]<stdout>:    show(fmti.format("Refinement", refine))
[1,0]<stdout>:    show(separ)
[1,0]<stdout>:    show(fmti.format("Number of cells", nbcells).replace(",", " "))
[1,0]<stdout>:    show(fmti.format("Number of nodes", nbnodes).replace(",", " "))
[1,0]<stdout>:    show(fmti.format("Number of DOFs", nbdofs).replace(",", " "))
[1,0]<stdout>:    show(fmti.format("Number of procs", size).replace(",", " "))
[1,0]<stdout>:    show(fmti.format("Nb of DOFs/proc", nbdofs // size).replace(",", " "))
[1,0]<stdout>:    for key, values in data.items():
[1,0]<stdout>:        times = comm.gather(values[0], root=0)
[1,0]<stdout>:        # mem = comm.gather(values[1], root=0)
[1,0]<stdout>:        if rank == 0:
[1,0]<stdout>:            show(fmtt.format(key, mean(times)))
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:# petscInitialize('-ksp_monitor_true_residual -stats' )
[1,0]<stdout>:petscInitialize("-ksp_monitor_true_residual -log_view")
[1,0]<stdout>:
[1,0]<stdout>:with ChronoCtxMg("Total"):
[1,0]<stdout>:    with ChronoCtxMg("Build mesh"):
[1,0]<stdout>:        if params["parallel"] == "HPC":
[1,0]<stdout>:            mesh = CA.ParallelMesh.buildCube(refine=params["refinements"])
[1,0]<stdout>:        else:
[1,0]<stdout>:            mesh = CA.Mesh.buildCube(refine=params["refinements"])
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Model"):
[1,0]<stdout>:        model = AFFE_MODELE(
[1,0]<stdout>:            MAILLAGE=mesh,
[1,0]<stdout>:            AFFE=_F(
[1,0]<stdout>:                TOUT="OUI",
[1,0]<stdout>:                PHENOMENE="MECANIQUE",
[1,0]<stdout>:                MODELISATION="3D",
[1,0]<stdout>:            ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Material"):
[1,0]<stdout>:        steel = DEFI_MATERIAU(
[1,0]<stdout>:            ELAS=_F(
[1,0]<stdout>:                E=200000.0,
[1,0]<stdout>:                NU=0.3,
[1,0]<stdout>:            ),
[1,0]<stdout>:            ECRO_LINE=_F(
[1,0]<stdout>:                D_SIGM_EPSI=2000.0,
[1,0]<stdout>:                SY=200.0,
[1,0]<stdout>:            ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:        mater = AFFE_MATERIAU(
[1,0]<stdout>:            MAILLAGE=mesh,
[1,0]<stdout>:            AFFE=_F(
[1,0]<stdout>:                TOUT="OUI",
[1,0]<stdout>:                MATER=steel,
[1,0]<stdout>:            ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Boundary conditions"):
[1,0]<stdout>:        block = AFFE_CHAR_CINE(
[1,0]<stdout>:            MODELE=model,
[1,0]<stdout>:            MECA_IMPO=(
[1,0]<stdout>:                _F(
[1,0]<stdout>:                    GROUP_MA="LEFT",
[1,0]<stdout>:                    DX=0,
[1,0]<stdout>:                    DY=0.0,
[1,0]<stdout>:                    DZ=0.0,
[1,0]<stdout>:                ),
[1,0]<stdout>:            ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:        imposed_displ = AFFE_CHAR_CINE(
[1,0]<stdout>:            MODELE=model,
[1,0]<stdout>:            MECA_IMPO=(
[1,0]<stdout>:                _F(
[1,0]<stdout>:                    GROUP_MA="RIGHT",
[1,0]<stdout>:                    DY=0.001,
[1,0]<stdout>:                    DZ=0.001,
[1,0]<stdout>:                ),
[1,0]<stdout>:            ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Create matrix"):
[1,0]<stdout>:        stiff_elem = CALC_MATR_ELEM(
[1,0]<stdout>:            MODELE=model,
[1,0]<stdout>:            OPTION="RIGI_MECA",
[1,0]<stdout>:            CHAM_MATER=mater,
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Numbering"):
[1,0]<stdout>:        dofNum = NUME_DDL(
[1,0]<stdout>:            MATR_RIGI=stiff_elem,
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Assembly"):
[1,0]<stdout>:        stiffness = ASSE_MATRICE(
[1,0]<stdout>:            MATR_ELEM=stiff_elem,
[1,0]<stdout>:            NUME_DDL=dofNum,
[1,0]<stdout>:            CHAR_CINE=(block, imposed_displ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Build RHS"):
[1,0]<stdout>:        rhs = CREA_CHAMP(
[1,0]<stdout>:            TYPE_CHAM="NOEU_DEPL_R",
[1,0]<stdout>:            OPERATION="AFFE",
[1,0]<stdout>:            MAILLAGE=mesh,
[1,0]<stdout>:            AFFE=_F(
[1,0]<stdout>:                TOUT="OUI",
[1,0]<stdout>:                NOM_CMP=(
[1,0]<stdout>:                    "DX",
[1,0]<stdout>:                    "DY",
[1,0]<stdout>:                    "DZ",
[1,0]<stdout>:                ),
[1,0]<stdout>:                VALE=(
[1,0]<stdout>:                    0.0,
[1,0]<stdout>:                    0.0,
[1,0]<stdout>:                    0.0,
[1,0]<stdout>:                ),
[1,0]<stdout>:            ),
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:        load_vector = CALC_CHAR_CINE(NUME_DDL=dofNum, CHAR_CINE=(block, imposed_displ))
[1,0]<stdout>:
[1,0]<stdout>:    if params["solver"] == "PETSC":
[1,0]<stdout>:        solver = CA.PetscSolver(RENUM="SANS", PRE_COND="GAMG")
[1,0]<stdout>:    elif params["solver"] == "MUMPS":
[1,0]<stdout>:        solver = CA.MumpsSolver(
[1,0]<stdout>:            MATR_DISTRIBUEE="OUI",
[1,0]<stdout>:   [1,0]<stdout>:         RENUM="PARMETIS",
[1,0]<stdout>:            ACCELERATION="FR+",
[1,0]<stdout>:            POSTTRAITEMENTS="MINI",
[1,0]<stdout>:        )
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Factorize"):
[1,0]<stdout>:        solver.factorize(stiffness)
[1,0]<stdout>:
[1,0]<stdout>:    with ChronoCtxMg("Solve"):
[1,0]<stdout>:        resu = solver.solve(rhs, load_vector)
[1,0]<stdout>:
[1,0]<stdout>:# write_stats(dofNum)
[1,0]<stdout>:nbNodes = len(mesh.getInnerNodes())
[1,0]<stdout>:if params["parallel"] == "HPC":
[1,0]<stdout>:    nbNodes = comm.allreduce(nbNodes, CA.MPI.SUM)
[1,0]<stdout>:nbDOFs = dofNum.getNumberOfDOFs()
[1,0]<stdout>:print_markdown_table(ChronoCtxMg.stats, params["refinements"], nbHexa, nbNodes, nbDOFs)
[1,0]<stdout>:
[1,0]<stdout>:CA.close()
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:# ------------------------------------------------------------------------------
[1,0]<stdout>:Command line #1:
[1,0]<stdout>:    ulimit -c unlimited ; ulimit -t 108000 ; ( /opt/venv/bin/python3 -m mpi4py /home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/Cube_perf.py --last --tpmax 86400 ; echo $? > _exit_code_ ) 2>&1 | tee -a fort.6
[1,1]<stdout>:
[1,1]<stdout>:# ------------------------------------------------------------------------------
[1,1]<stdout>:Execution of code_aster
[1,1]<stdout>:
[1,1]<stdout>:# ------------------------------------------------------------------------------
[1,1]<stdout>:Prepare environment in /tmp/run_aster_q244dsre/proc.1
[1,1]<stdout>:
[1,1]<stdout>:# ------------------------------------------------------------------------------
[1,1]<stdout>:Command file #1 / 1
[1,1]<stdout>:
[1,1]<stdout>:Content of the file to execute:
[1,1]<stdout>:# coding=utf-8
[1,1]<stdout>:#!/usr/bin/python
[1,1]<stdout>:
[1,1]<stdout>:import os
[1,1]<stdout>:from statistics import mean
[1,1]<stdout>:from datetime import datetime
[1,1]<stdout>:from resource import RUSAGE_SELF, getrusage
[1,1]<stdout>:
[1,1]<stdout>:from code_aster.Commands import *
[1,1]<stdout>:from code_aster import CA
[1,1]<stdout>:from code_aster.Utilities import petscInitialize
[1,1]<stdout>:
[1,1]<stdout>:CA.init()
[1,1]<stdout>:
[1,1]<stdout>:params = {}
[1,1]<stdout>:params["refinements"] = int(os.environ.get("REFINE", 1))
[1,1]<stdout>:params["parallel"] = os.environ.get("USE_LEGACY", "HPC")
[1,1]<stdout>:params["solver"] = os.environ.get("SOLVER", "PETSC")
[1,1]<stdout>:
[1,1]<stdout>:# General parameters
[1,1]<stdout>:comm = CA.MPI.ASTER_COMM_WORLD
[1,1]<stdout>:rank = comm.Get_rank()
[1,1]<stdout>:size = comm.Get_size()
[1,1]<stdout>:
[1,1]<stdout>:nbHexa = 8 ** params["refinements"]
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:def memory_peak(mess=None):
[1,1]<stdout>:    """Return memory peak in MB"""
[1,1]<stdout>:    return int(getrusage(RUSAGE_SELF).ru_maxrss / 1024)
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:class ChronoCtxMgGen:
[1,1]<stdout>:    stats = {}
[1,1]<stdout>:
[1,1]<stdout>:    def __init__(self, what):
[1,1]<stdout>:        self._what = what
[1,1]<stdout>:
[1,1]<stdout>:    def __enter__(self):
[1,1]<stdout>:        self.start = datetime.now()
[1,1]<stdout>:
[1,1]<stdout>:    def __exit__(self, exctype, exc, tb):
[1,1]<stdout>:        self.stop = datetime.now()
[1,1]<stdout>:        delta = self.stop - self.start
[1,1]<stdout>:        mem = memory_peak(self._what)
[1,1]<stdout>:        self.stats[self._what] = [delta.total_seconds(), mem]
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:class ChronoCtxMg(ChronoCtxMgGen):
[1,1]<stdout>:    pass
[1,1]<stdout>:    # def __init__(self, what):
[1,1]<stdout>:    #     ChronoCtxMgGen.__init__(self, what)
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:def write_stats(nume_ddl):
[1,1]<stdout>:    if rank == 0:
[1,1]<stdout>:        print("TITLE: TEST PERF CUBE")
[1,1]<stdout>:        print()
[1,1]<stdout>:        print("NB PROC")
[1,1]<stdout>:        print(size)
[1,1]<stdout>:        print()
[1,1]<stdout>:        print(
[1,1]<stdout>:            "COMMAND, TIME MIN (s), TIME MAX (s), TIME MEAN (s), MEM MIN (Mo), MEM MAX (Mo), MEM MEAN (Mo)"
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    for key, values in stats.items():
[1,1]<stdout>:        time = comm.gather(values[0], root=0)
[1,1]<stdout>:        mem = comm.gather(values[1], root=0)
[1,1]<stdout>:        if rank == 0:
[1,1]<stdout>:            print(
[1,1]<stdout>:                key
[1,1]<stdout>:                + ", "
[1,1]<stdout>:                + str(min(time))
[1,1]<stdout>:                + ", "
[1,1]<stdout>:                + str(max(time))
[1,1]<stdout>:                + ", "
[1,1]<stdout>:                + str(mean(time))
[1,1]<stdout>:                + ", "
[1,1]<stdout>:                + str(min(mem))
[1,1]<stdout>:                + ", "
[1,1]<stdout>:                + str(max(mem))
[1,1]<stdout>:                + ", "
[1,1]<stdout>:                + str(m[1,1]<stdout>:ean(mem))
[1,1]<stdout>:            )
[1,1]<stdout>:
[1,1]<stdout>:    mesh = nume_ddl.getMesh()
[1,1]<stdout>:    nodes = len(mesh.getInnerNodes())
[1,1]<stdout>:    nodes = comm.allreduce(nodes, CA.MPI.SUM)
[1,1]<stdout>:
[1,1]<stdout>:    if rank == 0:
[1,1]<stdout>:        print()
[1,1]<stdout>:        print("NB CELLS, NB NODES, NB DOFS")
[1,1]<stdout>:        print(str(nbHexa) + ", " + str(nodes) + ", " + str(nume_ddl.getNumberOfDofs()))
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:def print_markdown_table(data, refine, nbcells, nbnodes, nbdofs):
[1,1]<stdout>:    """Print a table of the mean time as a Markdown table."""
[1,1]<stdout>:
[1,1]<stdout>:    def show(*args, **kwargs):
[1,1]<stdout>:        if rank == 0:
[1,1]<stdout>:            print(*args, **kwargs)
[1,1]<stdout>:
[1,1]<stdout>:    fmti = "| {0:<16s} | {1:11,d} |"
[1,1]<stdout>:    fmtt = "| {0:<16s} | {1:11.2f} |"
[1,1]<stdout>:    separ = "| :--------------- | ----------: |"
[1,1]<stdout>:    show(fmti.format("Refinement", refine))
[1,1]<stdout>:    show(separ)
[1,1]<stdout>:    show(fmti.format("Number of cells", nbcells).replace(",", " "))
[1,1]<stdout>:    show(fmti.format("Number of nodes", nbnodes).replace(",", " "))
[1,1]<stdout>:    show(fmti.format("Number of DOFs", nbdofs).replace(",", " "))
[1,1]<stdout>:    show(fmti.format("Number of procs", size).replace(",", " "))
[1,1]<stdout>:    show(fmti.format("Nb of DOFs/proc", nbdofs // size).replace(",", " "))
[1,1]<stdout>:    for key, values in data.items():
[1,1]<stdout>:        times = comm.gather(values[0], root=0)
[1,1]<stdout>:        # mem = comm.gather(values[1], root=0)
[1,1]<stdout>:        if rank == 0:
[1,1]<stdout>:            show(fmtt.format(key, mean(times)))
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:# petscInitialize('-ksp_monitor_true_residual -stats' )
[1,1]<stdout>:petscInitialize("-ksp_monitor_true_residual -log_view")
[1,1]<stdout>:
[1,1]<stdout>:with ChronoCtxMg("Total"):
[1,1]<stdout>:    with ChronoCtxMg("Build mesh"):
[1,1]<stdout>:        if params["parallel"] == "HPC":
[1,1]<stdout>:            mesh = CA.ParallelMesh.buildCube(refine=params["refinements"])
[1,1]<stdout>:        else:
[1,1]<stdout>:            mesh = CA.Mesh.buildCube(refine=params["refinements"])
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Model"):
[1,1]<stdout>:        model = AFFE_MODELE(
[1,1]<stdout>:            MAILLAGE=mesh,
[1,1]<stdout>:            AFFE=_F(
[1,1]<stdout>:                TOUT="OUI",
[1,1]<stdout>:                PHENOMENE="MECANIQUE",
[1,1]<stdout>:                MODELISATION="3D",
[1,1]<stdout>:            ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Material"):
[1,1]<stdout>:        steel = DEFI_MATERIAU(
[1,1]<stdout>:            ELAS=_F(
[1,1]<stdout>:                E=200000.0,
[1,1]<stdout>:                NU=0.3,
[1,1]<stdout>:            ),
[1,1]<stdout>:            ECRO_LINE=_F(
[1,1]<stdout>:    [1,1]<stdout>:            D_SIGM_EPSI=2000.0,
[1,1]<stdout>:                SY=200.0,
[1,1]<stdout>:            ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:        mater = AFFE_MATERIAU(
[1,1]<stdout>:            MAILLAGE=mesh,
[1,1]<stdout>:            AFFE=_F(
[1,1]<stdout>:                TOUT="OUI",
[1,1]<stdout>:                MATER=steel,
[1,1]<stdout>:            ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Boundary conditions"):
[1,1]<stdout>:        block = AFFE_CHAR_CINE(
[1,1]<stdout>:            MODELE=model,
[1,1]<stdout>:            MECA_IMPO=(
[1,1]<stdout>:                _F(
[1,1]<stdout>:                    GROUP_MA="LEFT",
[1,1]<stdout>:                    DX=0,
[1,1]<stdout>:                    DY=0.0,
[1,1]<stdout>:                    DZ=0.0,
[1,1]<stdout>:                ),
[1,1]<stdout>:            ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:        imposed_displ = AFFE_CHAR_CINE(
[1,1]<stdout>:            MODELE=model,
[1,1]<stdout>:            MECA_IMPO=(
[1,1]<stdout>:                _F(
[1,1]<stdout>:                    GROUP_MA="RIGHT",
[1,1]<stdout>:                    DY=0.001,
[1,1]<stdout>:                    DZ=0.001,
[1,1]<stdout>:                ),
[1,1]<stdout>:            ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Create matrix"):
[1,1]<stdout>:        stiff_elem = CALC_MATR_ELEM(
[1,1]<stdout>:            MODELE=model,
[1,1]<stdout>:            OPTION="RIGI_MECA",
[1,1]<stdout>:            CHAM_MATER=mater,
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Numbering"):
[1,1]<stdout>:        dofNum = NUME_DDL(
[1,1]<stdout>:            MATR_RIGI=stiff_elem,
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Assembly"):
[1,1]<stdout>:        stiffness = ASSE_MATRICE(
[1,1]<stdout>:            MATR_ELEM=stiff_elem,
[1,1]<stdout>:            NUME_DDL=dofNum,
[1,1]<stdout>:            CHAR_CINE=(block, imposed_displ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Build RHS"):
[1,1]<stdout>:        rhs = CREA_CHAMP(
[1,1]<stdout>:            TYPE_CHAM="NOEU_DEPL_R",
[1,1]<stdout>:            OPERATION="AFFE",
[1,1]<stdout>:            MAILLAGE=mesh,
[1,1]<stdout>:            AFFE=_F(
[1,1]<stdout>:                TOUT="OUI",
[1,1]<stdout>:                NOM_CMP=(
[1,1]<stdout>:                    "DX",
[1,1]<stdout>:                    "DY",
[1,1]<stdout>:                    "DZ",
[1,1]<stdout>:                ),
[1,1]<stdout>:                VALE=(
[1,1]<stdout>:                    0.0,
[1,1]<stdout>:                    0.0,
[1,1]<stdout>:                    0.0,
[1,1]<stdout>:                ),
[1,1]<stdout>:            ),
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:        load_vector = CALC_CHAR_CINE(NUME_DDL=dofNum, CHAR_CINE=(block, imposed_displ))
[1,1]<stdout>:
[1,1]<stdout>:    if params["solver"] == "PETSC":
[1,1]<stdout>:        solver = CA.PetscSolver(RENUM="SANS", PRE_COND="GAMG")
[1,1]<stdout>:    elif params["solver"] == "MUMPS":
[1,1]<stdout>:        solver = CA.MumpsSolver(
[1,1]<stdout>:            MATR_DISTRIBUEE="OUI",
[1,1]<stdout>:            RENUM="PARMETIS",
[1,1]<stdout>:            ACCELERATION="FR+",
[1,1]<stdout>:            POSTTRAITEMENTS="MINI",
[1,1]<stdout>:        )
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Factorize"):
[1,1]<stdout>:        solver.factorize(stiffness)
[1,1]<stdout>:
[1,1]<stdout>:    with ChronoCtxMg("Solve"):
[1,1]<stdout>:        resu = solver.solve(rhs, load_vector)
[1,1]<stdout>:
[1,1]<stdout>:# write_stats(dofNum)
[1,1]<stdout>:nbNodes = len(mesh.getInnerNodes())
[1,1]<stdout>:if params["parallel"] == "HPC":
[1,1]<stdout>:    nbNodes = comm.allreduce(nbNodes, CA.MPI.SUM)
[1,1]<stdout>:nbDOFs = dofNum.getNumberOfDOFs()
[1,1]<stdout>:print_markdown_table(ChronoCtxMg.stats, params["refinements"], nbHexa, nbNodes, nbDOFs)
[1,1]<stdout>:
[1,1]<stdout>:CA.close()
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:# ------------------------------------------------------------------------------
[1,1]<stdout>:Command line #1:
[1,1]<stdout>:    ulimit -c unlimited ; ulimit -t 108000 ; ( /opt/venv/bin/python3 -m mpi4py /home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/Cube_perf.py --last --tpmax 86400 ; echo $? > _exit_code_ ) 2>&1 | tee -a fort.6
[1,0]<stdout>:setting '--memory' value to 3686.40 MB (keyword RESERVE_MEMOIRE)
[1,1]<stdout>:setting '--memory' value to 3686.40 MB (keyword RESERVE_MEMOIRE)
[1,0]<stdout>:checking MPI initialization...
[1,0]<stdout>:using COMM_WORLD.
[1,0]<stdout>:MPI is initialized.
[1,1]<stdout>:checking MPI initialization...
[1,1]<stdout>:using COMM_WORLD.
[1,1]<stdout>:MPI is initialized.
[1,1]<stdout>:Ouverture en écriture du fichier ./vola.1
[1,1]<stdout>:
[1,0]<stdout>:Ouverture en écriture du fichier ./vola.1
[1,0]<stdout>:
[1,1]<stdout>:<INFO> Démarrage de l'exécution.
[1,1]<stdout>:
[1,0]<stdout>:<INFO> Démarrage de l'exécution.
[1,0]<stdout>:
[1,1]<stdout>:                       -- CODE_ASTER -- VERSION : DÉVELOPPEMENT (unstable) --                       
[1,0]<stdout>:                       -- CODE_ASTER -- VERSION : DÉVELOPPEMENT (unstable) --                       
[1,0]<stdout>:                               Version 17.2.4 modifiée le 20/01/2025                                
[1,0]<stdout>:                               révision f855b56619c7 - branche 'main'                               
[1,1]<stdout>:                               Version 17.2.4 modifiée le 20/01/2025                                
[1,1]<stdout>:                               révision f855b56619c7 - branche 'main'                               
[1,1]<stdout>:                                   Copyright EDF R&D 1991 - 2025                                    
[1,1]<stdout>:                                                                                                    
[1,1]<stdout>:                              Exécution du : Thu Jan 23 16:29:02 2025                               
[1,1]<stdout>:                                  Nom de la machine : 8b87b9d0b29a                                  
[1,1]<stdout>:                                        Architecture : 64bit                                        
[1,1]<stdout>:                                    Type de processeur : aarch64                                    
[1,1]<stdout>:        Système d'exploitation : Linux-5.10.226-214.880.amzn2.aarch64-aarch64-with-glibc2.40        
[1,1]<stdout>:                                  Langue des messages : en (UTF-8)                                  
[1,0]<stdout>:                                   Copyright EDF R&D 1991 - 2025                                    
[1,0]<stdout>:                                                                                                    
[1,0]<stdout>:                              Exécution du : Thu Jan 23 16:29:02 2025                               
[1,0]<stdout>:                                  Nom de la machine : 8b87b9d0b29a                                  
[1,0]<stdout>:                                        Architecture : 64bit                                        
[1,0]<stdout>:                                    Type de processeur : aarch64                                    
[1,0]<stdout>:        Système d'exploitation : Linux-5.10.226-214.880.amzn2.aarch64-aarch64-with-glibc2.40        
[1,0]<stdout>:                                  Langue des messages : en (UTF-8)                                  
[1,1]<stdout>:                                     Version de Python : 3.11.2                                     
[1,1]<stdout>:                                     Version de NumPy : 1.24.2                                      
[1,0]<stdout>:                                     Version de Python : 3.11.2                                     
[1,0]<stdout>:                                     Version de NumPy : 1.24.2                                      
[1,0]<stdout>:                                      Parallélisme MPI : actif                                      
[1,0]<stdout>:                                   Rang du processeur courant : 0                                   
[1,0]<stdout>:                               Nombre de processeurs MPI utilisés : 2                               
[1,1]<stdout>:                                      Parallélisme MPI : actif                                      
[1,1]<stdout>:                                   Rang du processeur courant : 1                                   
[1,1]<stdout>:                               Nombre de processeurs MPI utilisés : 2                               
[1,1]<stdout>:                                    Parallélisme OpenMP : actif                                     
[1,1]<stdout>:                              Nombre de processus OpenMP utilisés : 1                               
[1,0]<stdout>:                                    Parallélisme OpenMP : actif                                     
[1,0]<stdout>:                              Nombre de processus OpenMP utilisés : 1                               
[1,1]<stdout>:                               Version de la librairie HDF5 : 1.10.9                                
[1,0]<stdout>:                               Version de la librairie HDF5 : 1.10.9                                
[1,1]<stdout>:                                Version de la librairie MED : 4.1.1                                 
[1,0]<stdout>:                                Version de la librairie MED : 4.1.1                                 
[1,0]<stdout>:                               Version de la librairie MFront : 4.2.0                               
[1,1]<stdout>:                               Version de la librairie MFront : 4.2.0                               
[1,1]<stdout>:                               Version de la librairie MUMPS : 5.6.2                                
[1,0]<stdout>:                               Version de la librairie MUMPS : 5.6.2                                
[1,1]<stdout>:                              Version de la librairie PETSc : 3.20.5p0                              
[1,0]<stdout>:                              Version de la librairie PETSc : 3.20.5p0                              
[1,1]<stdout>:                               Version de la librairie SCOTCH : 7.0.4                               
[1,0]<stdout>:                               Version de la librairie SCOTCH : 7.0.4                               
[1,0]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:starting the execution...
[1,1]<stdout>:starting the execution...
[1,0]<stdout>:Valeur initiale du temps CPU maximum =   86400 secondes
[1,0]<stdout>:  Valeur du temps CPU maximum passé aux commandes =   77760 secondes
[1,0]<stdout>:  Réserve CPU prévue = 8640 secondes
[1,0]<stdout>:
[1,1]<stdout>:Valeur initiale du temps CPU maximum =   86400 secondes
[1,1]<stdout>:  Valeur du temps CPU maximum passé aux commandes =   77760 secondes
[1,1]<stdout>:  Réserve CPU prévue = 8640 secondes
[1,1]<stdout>:
[1,0]<stdout>:Ouverture en écriture du fichier ./glob.1
[1,0]<stdout>:
[1,1]<stdout>:Ouverture en écriture du fichier ./glob.1
[1,1]<stdout>:
[1,1]<stdout>:Ouverture en écriture du fichier ./vola.1
[1,1]<stdout>:
[1,0]<stdout>:Ouverture en écriture du fichier ./vola.1
[1,0]<stdout>:
[1,0]<stdout>:Ouverture en lecture du fichier /opt/aster/install/mpi/lib/aster/elem.1
[1,0]<stdout>:
[1,1]<stdout>:Ouverture en lecture du fichier /opt/aster/install/mpi/lib/aster/elem.1
[1,1]<stdout>:
[1,0]<stdout>:Nom de la base                          :  ELEMBASE
[1,0]<stdout>:     Créée avec la version                   :  17.02.04
[1,0]<stdout>:     Nombre d'enregistrements utilisés       :  45
[1,0]<stdout>:     Nombre d'enregistrements maximum        :  512
[1,0]<stdout>:     Nombre d'enregistrements par fichier    :  512
[1,0]<stdout>:     Longueur d'enregistrement (octets)      :  819200
[1,0]<stdout>:     Nombre d'identificateurs utilisés       :  123
[1,0]<stdout>:     Taille maximum du répertoire            :  300
[1,0]<stdout>:     Pourcentage d'utilisation du répertoire :  41 %
[1,0]<stdout>:
[1,0]<stdout>:Ouverture en lecture du fichier /opt/aster/install/mpi/lib/aster/elem.1
[1,0]<stdout>:
[1,1]<stdout>:Nom de la base                          :  ELEMBASE
[1,1]<stdout>:     Créée avec la version                   :  17.02.04
[1,1]<stdout>:     Nombre d'enregistrements utilisés       :  45
[1,1]<stdout>:     Nombre d'enregistrements maximum        :  512
[1,1]<stdout>:     Nombre d'enregistrements par fichier    :  512
[1,1]<stdout>:     Longueur d'enregistrement (octets)      :  819200
[1,1]<stdout>:     Nombre d'identificateurs utilisés       :  123
[1,1]<stdout>:     Taille maximum du répertoire            :  300
[1,1]<stdout>:     Pourcentage d'utilisation du répertoire :  41 %
[1,1]<stdout>:
[1,1]<stdout>:Ouverture en lecture du fichier /opt/aster/install/mpi/lib/aster/elem.1
[1,1]<stdout>:
[1,1]<stdout>:Nom de la base                          :  ELEMBASE
[1,1]<stdout>:     Nombre d'enregistrements utilisés       :  45
[1,1]<stdout>:     Nombre d'enregistrements maximum        :  512
[1,1]<stdout>:     Nombre d'enregistrements par fichier    :  512
[1,1]<stdout>:     Longueur d'enregistrement (octets)      :  819200
[1,1]<stdout>:     Nombre total d'accès en lecture         :  63
[1,1]<stdout>:     Volume des accès en lecture             :         49.22 Mo.
[1,1]<stdout>:     Nombre total d'accès en écriture        :  0
[1,1]<stdout>:     Volume des accès en écriture            :          0.00 Mo.
[1,1]<stdout>:     Nombre d'identificateurs utilisés       :  123
[1,1]<stdout>:     Taille maximum du répertoire            :  300
[1,1]<stdout>:     Pourcentage d'utilisation du répertoire :  41 %
[1,1]<stdout>:
[1,0]<stdout>:Nom de la base                          :  ELEMBASE
[1,0]<stdout>:     Nombre d'enregistrements utilisés       :  45
[1,0]<stdout>:     Nombre d'enregistrements maximum        :  512
[1,0]<stdout>:     Nombre d'enregistrements par fichier    :  512
[1,0]<stdout>:     Longueur d'enregistrement (octets)      :  819200
[1,0]<stdout>:     Nombre total d'accès en lecture         :  63
[1,0]<stdout>:     Volume des accès en lecture             :         49.22 Mo.
[1,0]<stdout>:     Nombre total d'accès en écriture        :  0
[1,0]<stdout>:     Volume des accès en écriture            :          0.00 Mo.
[1,0]<stdout>:     Nombre d'identificateurs utilisés       :  123
[1,0]<stdout>:     Taille maximum du répertoire            :  300
[1,0]<stdout>:     Pourcentage d'utilisation du répertoire :  41 %
[1,0]<stdout>:
[1,1]<stdout>:Relecture des catalogues des éléments faite.
[1,1]<stdout>:
[1,0]<stdout>:Relecture des catalogues des éléments faite.
[1,0]<stdout>:
[1,1]<stdout>:Fin de lecture (durée  0.015347  s.) 
[1,1]<stdout>:
[1,0]<stdout>:Fin de lecture (durée  0.015458  s.) 
[1,0]<stdout>:
[1,1]<stdout>:                      Mémoire limite pour l'allocation dynamique : 4215.81 Mo                       
[1,1]<stdout>:                         ajouté à l'initialisation du processus : 589.54 Mo                         
[1,1]<stdout>:                               Limite cible du processus : 4805.34 Mo                               
[1,0]<stdout>:                      Mémoire limite pour l'allocation dynamique : 4215.86 Mo                       
[1,0]<stdout>:                         ajouté à l'initialisation du processus : 589.54 Mo                         
[1,0]<stdout>:                               Limite cible du processus : 4805.40 Mo                               
[1,0]<stdout>:                         Taille limite des fichiers d'échange : 2048.00 Go                          
[1,1]<stdout>:                         Taille limite des fichiers d'échange : 2048.00 Go                          
[1,0]<stdout>:# Mémoire (Mo) :   589.54 /   580.64 /   209.22 /   185.03 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Mémoire (Mo) :   589.54 /   580.63 /   209.22 /   185.03 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0001   user+syst:        0.01s (syst:        0.09s, elaps:        0.11s)
[1,1]<stdout>:# Fin commande #0001   user+syst:        0.01s (syst:        0.09s, elaps:        0.11s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:PETSc initialized...
[1,0]<stdout>:PETSc initialized...
[1,0]<stdout>:Nom MED du maillage : PARALLEPIPED
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:------------ MAILLAGE 00000001 - IMPRESSIONS NIVEAU  1 ------------
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE NOEUDS                      274625
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE MAILLES                     287488
[1,0]<stdout>:                              SEG2                  768
[1,0]<stdout>:                              QUAD4               24576
[1,0]<stdout>:                              HEXA8              262144
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE GROUPES DE NOEUDS                8
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE GROUPES DE MAILLES              19
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt190
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0002 de /opt/aster/install/mpi/lib/aster/code_aster/Helpers/LogicalUnit.py, ligne 190
[1,0]<stdout>:DEFI_FICHIER(ACCES='NEW',
[1,0]<stdout>:             ACTION='ASSOCIER',
[1,0]<stdout>:             FICHIER='/tmp/buildCubeemp3g0m_/buildCube.med',
[1,0]<stdout>:             TYPE='BINARY',
[1,0]<stdout>:             UNITE=99)
[1,0]<stdout>:
[1,0]<stdout>:Deleting '/tmp/buildCubeemp3g0m_/buildCube.med': [1,0]<stdout>:No such file or directory
[1,0]<stdout>:# Mémoire (Mo) :  1111.07 /   780.58 /   249.04 /   213.86 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0002   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:Création du fichier au format MED 3.3.1.
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt190
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0003 de /opt/aster/install/mpi/lib/aster/code_aster/Helpers/LogicalUnit.py, ligne 190
[1,0]<stdout>:DEFI_FICHIER(ACTION='LIBERER',
[1,0]<stdout>:             UNITE=99)
[1,0]<stdout>:
[1,0]<stdout>:# Mémoire (Mo) :  1111.07 /   780.70 /   282.08 /   250.98 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0003   user+syst:        0.00s (syst:        0.00s, elaps:        0.00s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:<INFO> Activation du mode parallélisme distribué.
[1,1]<stdout>:<INFO> Activation du mode parallélisme distribué.
[1,0]<stdout>:
[1,0]<stdout>:Nom MED du maillage : 00000001
[1,0]<stdout>:
[1,1]<stdout>:Nom MED du maillage : 00000001
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt282
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt282
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0004 de /opt/aster/install/mpi/lib/aster/code_aster/ObjectsExt/parallelmesh_ext.py,
[1,0]<stdout>:ligne 282
[1,1]<stdout>:# Commande #0002 de /opt/aster/install/mpi/lib/aster/code_aster/ObjectsExt/parallelmesh_ext.py,
[1,1]<stdout>:ligne 282
[1,0]<stdout>:CREA_MAILLAGE(INFO=1,
[1,0]<stdout>:              MAILLAGE='<00000002>',
[1,0]<stdout>:              RAFFINEMENT=_F(NIVEAU=0,
[1,0]<stdout>:                             TOUT='OUI'))
[1,0]<stdout>:
[1,1]<stdout>:CREA_MAILLAGE(INFO=1,
[1,1]<stdout>:              MAILLAGE='<00000002>',
[1,1]<stdout>:              RAFFINEMENT=_F(NIVEAU=0,
[1,1]<stdout>:                             TOUT='OUI'))
[1,1]<stdout>:
[1,0]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:------------ MAILLAGE 00000004 - IMPRESSIONS NIVEAU  1 ------------
[1,1]<stdout>:------------ MAILLAGE 00000004 - IMPRESSIONS NIVEAU  1 ------------
[1,1]<stdout>:
[1,1]<stdout>:ASTER 17.02.04 CONCEPT 00000004 CALCULE LE 23/01/2025 A 16:29:12 DE TYPE        
[1,1]<stdout>:MAILLAGE_P                                                                      
[1,0]<stdout>:
[1,0]<stdout>:ASTER 17.02.04 CONCEPT 00000004 CALCULE LE 23/01/2025 A 16:29:12 DE TYPE        
[1,0]<stdout>:MAILLAGE_P                                                                      
[1,1]<stdout>:
[1,1]<stdout>:NOMBRE DE NOEUDS                      141332
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE NOEUDS                      142047
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE MAILLES                     146350
[1,1]<stdout>:
[1,1]<stdout>:NOMBRE DE MAILLES                     145649
[1,1]<stdout>:                              SEG2                  387
[1,0]<stdout>:                              SEG2                  385
[1,0]<stdout>:                              QUAD4               12402
[1,0]<stdout>:                              HEXA8              133563
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE GROUPES DE NOEUDS                4
[1,1]<stdout>:                              QUAD4               12436
[1,1]<stdout>:                              HEXA8              132826
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:NOMBRE DE GROUPES DE MAILLES              14
[1,0]<stdout>:
[1,1]<stdout>:NOMBRE DE GROUPES DE NOEUDS                4
[1,1]<stdout>:
[1,1]<stdout>:NOMBRE DE GROUPES DE MAILLES              14
[1,1]<stdout>:
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:#4      Communications MPI                                CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
[1,1]<stdout>:#4      Communications MPI                                CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
[1,1]<stdout>:# Résultat commande #0002 (CREA_MAILLAGE): '<00000004>' de type <ParallelMesh>
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /   850.30 /   266.87 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0002   user+syst:        1.45s (syst:        0.22s, elaps:        1.67s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Résultat commande #0004 (CREA_MAILLAGE): '<00000004>' de type <ParallelMesh>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1024.57 /   311.85 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0004   user+syst:        1.49s (syst:        0.18s, elaps:        1.68s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt131
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0003 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 131
[1,1]<stdout>:model = AFFE_MODELE(AFFE=_F(MODELISATION='3D',
[1,1]<stdout>:                            PHENOMENE='MECANIQUE',
[1,1]<stdout>:                            TOUT='OUI'),
[1,1]<stdout>:                    DISTRIBUTION=_F(METHODE='CENTRALISE'),
[1,1]<stdout>:                    INFO=1,
[1,1]<stdout>:                    MAILLAGE='<00000004>',
[1,1]<stdout>:                    VERI_JACOBIEN='OUI',
[1,1]<stdout>:                    VERI_NORM_IFS='OUI',
[1,1]<stdout>:                    VERI_PLAN='OUI')
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt131
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0005 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 131
[1,0]<stdout>:model = AFFE_MODELE(AFFE=_F(MODELISATION='3D',
[1,0]<stdout>:                            PHENOMENE='MECANIQUE',
[1,0]<stdout>:                            TOUT='OUI'),
[1,0]<stdout>:                    DISTRIBUTION=_F(METHODE='CENTRALISE'),
[1,0]<stdout>:                    INFO=1,
[1,0]<stdout>:                    MAILLAGE='<00000004>',
[1,0]<stdout>:                    VERI_JACOBIEN='OUI',
[1,0]<stdout>:                    VERI_NORM_IFS='OUI',
[1,0]<stdout>:                    VERI_PLAN='OUI')
[1,0]<stdout>:
[1,0]<stdout>:Sur les 146350 mailles du maillage 00000004, on a demandé l'affectation de 146350, on a pu en
[1,0]<stdout>:affecter 146350.
[1,1]<stdout>:Sur les 145649 mailles du maillage 00000004, on a demandé l'affectation de 145649, on a pu en
[1,1]<stdout>:affecter 145649.
[1,1]<stdout>:Modélisation     Formulation      Type maille  Élément fini     Nombre
[1,0]<stdout>:Modélisation     Formulation      Type maille  Élément fini     Nombre
[1,1]<stdout>:_                _                SEG2         MECA_ARETE2      387
[1,0]<stdout>:_                _                SEG2         MECA_ARETE2      385
[1,1]<stdout>:_                _                QUAD4        MECA_FACE4       12436
[1,0]<stdout>:_                _                QUAD4        MECA_FACE4       12402
[1,1]<stdout>:3D               _                HEXA8        MECA_HEXA8       132826
[1,0]<stdout>:3D               _                HEXA8        MECA_HEXA8       133563
[1,0]<stdout>:#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.08      0.00      0.08
[1,1]<stdout>:#2      Calculs elementaires et assemblages               CPU (USER+SYST/SYST/ELAPS):      0.08      0.00      0.07
[1,0]<stdout>:#4      Communications MPI                                CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
[1,1]<stdout>:#4      Communications MPI                                CPU (USER+SYST/SYST/ELAPS):      0.03      0.00      0.03
[1,0]<stdout>:# Résultat commande #0005 (AFFE_MODELE): model ('<00000005>') de type <Model>
[1,1]<stdout>:# Résultat commande #0003 (AFFE_MODELE): model ('<00000005>') de type <Model>
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /   883.03 /   266.87 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1014.76 /   311.85 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0003   user+syst:        0.51s (syst:        0.00s, elaps:        0.51s)
[1,0]<stdout>:# Fin commande #0005   user+syst:        0.48s (syst:        0.00s, elaps:        0.48s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt141
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt141
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0004 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 141
[1,0]<stdout>:# Commande #0006 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 141
[1,1]<stdout>:steel = DEFI_MATERIAU(ECRO_LINE=_F(D_SIGM_EPSI=2000.0,
[1,1]<stdout>:                                   SY=200.0),
[1,1]<stdout>:                      ELAS=_F(B_ENDOGE=0.0,
[1,1]<stdout>:                              COEF_AMOR=1.0,
[1,1]<stdout>:                              E=200000.0,
[1,1]<stdout>:                              K_DESSIC=0.0,
[1,1]<stdout>:                              NU=0.3),
[1,1]<stdout>:                      INFO=1)
[1,1]<stdout>:
[1,0]<stdout>:steel = DEFI_MATERIAU(ECRO_LINE=_F(D_SIGM_EPSI=2000.0,
[1,0]<stdout>:                                   SY=200.0),
[1,0]<stdout>:                      ELAS=_F(B_ENDOGE=0.0,
[1,0]<stdout>:                              COEF_AMOR=1.0,
[1,0]<stdout>:                              E=200000.0,
[1,0]<stdout>:                              K_DESSIC=0.0,
[1,0]<stdout>:                              NU=0.3),
[1,0]<stdout>:                      INFO=1)
[1,0]<stdout>:
[1,1]<stdout>:# Résultat commande #0004 (DEFI_MATERIAU): steel ('<00000006>') de type <Material>
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /   883.03 /   266.87 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0004   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Résultat commande #0006 (DEFI_MATERIAU): steel ('<00000006>') de type <Material>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1014.76 /   311.85 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0006   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt152
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0005 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 152
[1,1]<stdout>:mater = AFFE_MATERIAU(AFFE=_F(MATER=steel,
[1,1]<stdout>:                              TOUT='OUI'),
[1,1]<stdout>:                      INFO=1,
[1,1]<stdout>:                      MAILLAGE='<00000004>')
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt152
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0007 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 152
[1,0]<stdout>:mater = AFFE_MATERIAU(AFFE=_F(MATER=steel,
[1,0]<stdout>:                              TOUT='OUI'),
[1,0]<stdout>:                      INFO=1,
[1,0]<stdout>:                      MAILLAGE='<00000004>')
[1,0]<stdout>:
[1,1]<stdout>:# Résultat commande #0005 (AFFE_MATERIAU): mater ('<00000007>') de type <MaterialField>
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /   883.03 /   266.87 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0005   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt161
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0006 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 161
[1,1]<stdout>:block = AFFE_CHAR_CINE(INFO=1,
[1,1]<stdout>:                       MECA_IMPO=_F(DX=0,
[1,1]<stdout>:                                    DY=0.0,
[1,1]<stdout>:                                    DZ=0.0,
[1,1]<stdout>:                                    GROUP_MA='LEFT'),
[1,1]<stdout>:                       MODELE=model,
[1,1]<stdout>:                       SYNTAXE='NON')
[1,1]<stdout>:
[1,0]<stdout>:# Résultat commande #0007 (AFFE_MATERIAU): mater ('<00000007>') de type <MaterialField>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1014.76 /   311.85 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0007   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt161
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0008 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 161
[1,0]<stdout>:block = AFFE_CHAR_CINE(INFO=1,
[1,0]<stdout>:                       MECA_IMPO=_F(DX=0,
[1,0]<stdout>:                                    DY=0.0,
[1,0]<stdout>:                                    DZ=0.0,
[1,0]<stdout>:                                    GROUP_MA='LEFT'),
[1,0]<stdout>:                       MODELE=model,
[1,0]<stdout>:                       SYNTAXE='NON')
[1,0]<stdout>:
[1,0]<stdout>:# Résultat commande #0008 (AFFE_CHAR_CINE): block ('<00000008>') de type <MechanicalDirichletBC>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1014.76 /   311.85 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Résultat commande #0006 (AFFE_CHAR_CINE): block ('<00000008>') de type <MechanicalDirichletBC>
[1,0]<stdout>:# Fin commande #0008   user+syst:        0.07s (syst:        0.00s, elaps:        0.07s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /   883.03 /   266.87 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0006   user+syst:        0.07s (syst:        0.00s, elaps:        0.07s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt173
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt173
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0009 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 173
[1,0]<stdout>:imposed_displ = AFFE_CHAR_CINE(INFO=1,
[1,0]<stdout>:                               MECA_IMPO=_F(DY=0.001,
[1,0]<stdout>:                                            DZ=0.001,
[1,0]<stdout>:                                            GROUP_MA='RIGHT'),
[1,0]<stdout>:                               MODELE=model,
[1,0]<stdout>:                               SYNTAXE='NON')
[1,0]<stdout>:
[1,1]<stdout>:# Commande #0007 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 173
[1,1]<stdout>:imposed_displ = AFFE_CHAR_CINE(INFO=1,
[1,1]<stdout>:                               MECA_IMPO=_F(DY=0.001,
[1,1]<stdout>:                                            DZ=0.001,
[1,1]<stdout>:                                            GROUP_MA='RIGHT'),
[1,1]<stdout>:                               MODELE=model,
[1,1]<stdout>:                               SYNTAXE='NON')
[1,1]<stdout>:
[1,1]<stdout>:# Résultat commande #0007 (AFFE_CHAR_CINE): imposed_displ ('<00000009>') de type
[1,1]<stdout>:<MechanicalDirichletBC>
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /   883.03 /   266.87 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0007   user+syst:        0.08s (syst:        0.00s, elaps:        0.08s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Résultat commande #0009 (AFFE_CHAR_CINE): imposed_displ ('<00000009>') de type
[1,0]<stdout>:<MechanicalDirichletBC>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1014.76 /   311.85 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0009   user+syst:        0.08s (syst:        0.00s, elaps:        0.08s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt185
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0008 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 185
[1,1]<stdout>:stiff_elem = CALC_MATR_ELEM(CALC_ELEM_MODELE='OUI',
[1,1]<stdout>:                            CHAM_MATER=mater,
[1,1]<stdout>:                            INST=0.0,
[1,1]<stdout>:                            MODELE=model,
[1,1]<stdout>:                            MODE_FOURIER=0,
[1,1]<stdout>:                            OPTION='RIGI_MECA')
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt185
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0010 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 185
[1,0]<stdout>:stiff_elem = CALC_MATR_ELEM(CALC_ELEM_MODELE='OUI',
[1,0]<stdout>:                            CHAM_MATER=mater,
[1,0]<stdout>:                            INST=0.0,
[1,0]<stdout>:                            MODELE=model,
[1,0]<stdout>:                            MODE_FOURIER=0,
[1,0]<stdout>:                            OPTION='RIGI_MECA')
[1,0]<stdout>:
[1,0]<stdout>:# Résultat commande #0010 (CALC_MATR_ELEM): stiff_elem ('<0000000b>') de type
[1,0]<stdout>:<ElementaryMatrixDisplacementReal>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1092.33 /   548.69 /   268.79 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0010   user+syst:        1.19s (syst:        0.02s, elaps:        1.21s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt192
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0011 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 192
[1,0]<stdout>:dofNum = NUME_DDL(INFO=1,
[1,0]<stdout>:                  MATR_RIGI=stiff_elem)
[1,0]<stdout>:
[1,1]<stdout>:# Résultat commande #0008 (CALC_MATR_ELEM): stiff_elem ('<0000000b>') de type
[1,1]<stdout>:<ElementaryMatrixDisplacementReal>
[1,1]<stdout>:# Mémoire (Mo) :  1570.82 /  1075.15 /   546.96 /   232.31 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0008   user+syst:        1.19s (syst:        0.03s, elaps:        1.22s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt192
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0009 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 192
[1,1]<stdout>:dofNum = NUME_DDL(INFO=1,
[1,1]<stdout>:                  MATR_RIGI=stiff_elem)
[1,1]<stdout>:
[1,0]<stdout>:Le système linéaire à résoudre a 823875 degrés de liberté:
[1,0]<stdout>:   - 823875 sont des degrés de liberté physiques
[1,0]<stdout>:     (ils sont portés par 274625 noeuds du maillage)
[1,0]<stdout>:   - 0 sont les couples de paramètres de Lagrange associés
[1,0]<stdout>:     aux 0 relations linéaires dualisées.
[1,1]<stdout>:Le système linéaire à résoudre a 823875 degrés de liberté:
[1,1]<stdout>:   - 823875 sont des degrés de liberté physiques
[1,1]<stdout>:     (ils sont portés par 274625 noeuds du maillage)
[1,1]<stdout>:   - 0 sont les couples de paramètres de Lagrange associés
[1,1]<stdout>:     aux 0 relations linéaires dualisées.
[1,1]<stdout>:La matrice est de taille 423996 équations.
[1,1]<stdout>:  Elle contient 16690413 termes non nuls si elle est symétrique et 32956830 termes non nuls si elle
[1,1]<stdout>:n'est pas symétrique.
[1,1]<stdout>:  Soit un taux de remplissage de   0.018 %.
[1,0]<stdout>:La matrice est de taille 426141 équations.
[1,0]<stdout>:  Elle contient 16780194 termes non nuls si elle est symétrique et 33134247 termes non nuls si elle
[1,0]<stdout>:n'est pas symétrique.
[1,0]<stdout>:  Soit un taux de remplissage de   0.018 %.
[1,1]<stdout>:# Résultat commande #0009 (NUME_DDL): dofNum ('<00000011>') de type <ParallelDOFNumbering>
[1,1]<stdout>:# Mémoire (Mo) :  1610.49 /  1171.20 /  1079.51 /   715.48 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0009   user+syst:        0.69s (syst:        0.48s, elaps:        1.17s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Résultat commande #0011 (NUME_DDL): dofNum ('<00000011>') de type <ParallelDOFNumbering>
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt197
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0010 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 197
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1188.87 /  1081.75 /   716.04 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0011   user+syst:        0.77s (syst:        0.41s, elaps:        1.18s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:stiffness = ASSE_MATRICE(CHAR_CINE=(block, imposed_displ),
[1,1]<stdout>:                         INFO=1,
[1,1]<stdout>:                         MATR_ELEM=stiff_elem,
[1,1]<stdout>:                         NUME_DDL=dofNum)
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt197
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0012 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 197
[1,0]<stdout>:stiffness = ASSE_MATRICE(CHAR_CINE=(block, imposed_displ),
[1,0]<stdout>:                         INFO=1,
[1,0]<stdout>:                         MATR_ELEM=stiff_elem,
[1,0]<stdout>:                         NUME_DDL=dofNum)
[1,0]<stdout>:
[1,1]<stdout>:# Résultat commande #0010 (ASSE_MATRICE): stiffness ('<00000013>') de type
[1,1]<stdout>:<AssemblyMatrixDisplacementReal>
[1,1]<stdout>:# Mémoire (Mo) :  1610.49 /  1301.77 /  1079.51 /   715.48 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0010   user+syst:        0.47s (syst:        0.03s, elaps:        0.50s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Résultat commande #0012 (ASSE_MATRICE): stiffness ('<00000013>') de type
[1,0]<stdout>:<AssemblyMatrixDisplacementReal>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1320.14 /  1081.75 /   716.04 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0012   user+syst:        0.49s (syst:        0.01s, elaps:        0.50s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt204
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0011 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 204
[1,1]<stdout>:rhs = CREA_CHAMP(AFFE=_F(NOM_CMP=('DX', 'DY', 'DZ'),
[1,1]<stdout>:                         TOUT='OUI',
[1,1]<stdout>:                         VALE=(0.0, 0.0, 0.0)),
[1,1]<stdout>:                 INFO=1,
[1,1]<stdout>:                 MAILLAGE='<00000004>',
[1,1]<stdout>:                 OPERATION='AFFE',
[1,1]<stdout>:                 TYPE_CHAM='NOEU_DEPL_R')
[1,1]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt204
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0013 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 204
[1,0]<stdout>:rhs = CREA_CHAMP(AFFE=_F(NOM_CMP=('DX', 'DY', 'DZ'),
[1,0]<stdout>:                         TOUT='OUI',
[1,0]<stdout>:                         VALE=(0.0, 0.0, 0.0)),
[1,0]<stdout>:                 INFO=1,
[1,0]<stdout>:                 MAILLAGE='<00000004>',
[1,0]<stdout>:                 OPERATION='AFFE',
[1,0]<stdout>:                 TYPE_CHAM='NOEU_DEPL_R')
[1,0]<stdout>:
[1,1]<stdout>:#4      Communications MPI                                CPU (USER+SYST/SYST/ELAPS):      0.01      0.00      0.00
[1,0]<stdout>:#4      Communications MPI                                CPU (USER+SYST/SYST/ELAPS):      0.00      0.00      0.00
[1,1]<stdout>:# Résultat commande #0011 (CREA_CHAMP): rhs ('<00000015>') de type <FieldOnNodesReal>
[1,0]<stdout>:# Résultat commande #0013 (CREA_CHAMP): rhs ('<00000015>') de type <FieldOnNodesReal>
[1,1]<stdout>:# Mémoire (Mo) :  1610.49 /  1327.67 /  1079.51 /   715.48 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1346.16 /  1081.75 /   716.04 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0011   user+syst:        0.01s (syst:        0.01s, elaps:        0.02s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Fin commande #0013   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt223
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt223
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0012 de
[1,1]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,1]<stdout>:Cube_perf.py, ligne 223
[1,0]<stdout>:# Commande #0014 de
[1,0]<stdout>:/home/aster/work/Benchmark-CodeAster/opensource-installation-development-main/benchmarks/Cube_files/
[1,0]<stdout>:Cube_perf.py, ligne 223
[1,1]<stdout>:load_vector = CALC_CHAR_CINE(CHAR_CINE=(block, imposed_displ),
[1,1]<stdout>:                             INFO=1,
[1,1]<stdout>:                             INST=0.0,
[1,1]<stdout>:                             NUME_DDL=dofNum)
[1,1]<stdout>:
[1,0]<stdout>:load_vector = CALC_CHAR_CINE(CHAR_CINE=(block, imposed_displ),
[1,0]<stdout>:                             INFO=1,
[1,0]<stdout>:                             INST=0.0,
[1,0]<stdout>:                             NUME_DDL=dofNum)
[1,0]<stdout>:
[1,1]<stdout>:# Résultat commande #0012 (CALC_CHAR_CINE): load_vector ('<00000017>') de type <FieldOnNodesReal>
[1,1]<stdout>:# Mémoire (Mo) :  1610.49 /  1330.91 /  1079.51 /   715.48 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0012   user+syst:        0.02s (syst:        0.01s, elaps:        0.03s)
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Résultat commande #0014 (CALC_CHAR_CINE): load_vector ('<00000017>') de type <FieldOnNodesReal>
[1,0]<stdout>:# Mémoire (Mo) :  1699.51 /  1349.42 /  1081.75 /   716.04 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0014   user+syst:        0.03s (syst:        0.00s, elaps:        0.03s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:  0 KSP unpreconditioned resid norm 2.784557239768e+02 true resid norm 2.784557239768e+02 ||r(i)||/||b|| 1.000000000000e+00
[1,0]<stdout>:  1 KSP unpreconditioned resid norm 4.013265856818e+01 true resid norm 4.013265856818e+01 ||r(i)||/||b|| 1.441258164674e-01
[1,0]<stdout>:  2 KSP unpreconditioned resid norm 5.815299734926e+00 true resid norm 5.815299734927e+00 ||r(i)||/||b|| 2.088410915701e-02
[1,0]<stdout>:  3 KSP unpreconditioned resid norm 1.850869287833e+00 true resid norm 1.850869287833e+00 ||r(i)||/||b|| 6.646906953104e-03
[1,0]<stdout>:  4 KSP unpreconditioned resid norm 6.864923638862e-01 true resid norm 6.864923638862e-01 ||r(i)||/||b|| 2.465355547668e-03
[1,0]<stdout>:  5 KSP unpreconditioned resid norm 2.782738587092e-01 true resid norm 2.782738587092e-01 ||r(i)||/||b|| 9.993468790480e-04
[1,0]<stdout>:  6 KSP unpreconditioned resid norm 1.099666573325e-01 true resid norm 1.099666573325e-01 ||r(i)||/||b|| 3.949161315916e-04
[1,0]<stdout>:  7 KSP unpreconditioned resid norm 4.440946329915e-02 true resid norm 4.440946329916e-02 ||r(i)||/||b|| 1.594848281979e-04
[1,0]<stdout>:  8 KSP unpreconditioned resid norm 1.776353392410e-02 true resid norm 1.776353392407e-02 ||r(i)||/||b|| 6.379302845844e-05
[1,0]<stdout>:  9 KSP unpreconditioned resid norm 7.107788722994e-03 true resid norm 7.107788722985e-03 ||r(i)||/||b|| 2.552574111774e-05
[1,0]<stdout>: 10 KSP unpreconditioned resid norm 2.937785489163e-03 true resid norm 2.937785489151e-03 ||r(i)||/||b|| 1.055027868415e-05
[1,0]<stdout>: 11 KSP unpreconditioned resid norm 1.161106038935e-03 true resid norm 1.161106038934e-03 ||r(i)||/||b|| 4.169804888013e-06
[1,0]<stdout>: 12 KSP unpreconditioned resid norm 4.565866424989e-04 true resid norm 4.565866424809e-04 ||r(i)||/||b|| 1.639710026284e-06
[1,0]<stdout>: 13 KSP unpreconditioned resid norm 1.792104126618e-04 true resid norm 1.792104126640e-04 ||r(i)||/||b|| 6.435867437186e-07
[1,1]<stdout>:
[1,1]<stdout>:.. _stg1_txt72
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:# Commande #0013 de /opt/aster/install/mpi/lib/aster/code_aster/CodeCommands/fin.py, ligne 72
[1,0]<stdout>:| Refinement       |           6 |
[1,0]<stdout>:| :--------------- | ----------: |
[1,0]<stdout>:| Number of cells  |     262 144 |
[1,0]<stdout>:| Number of nodes  |     274 625 |
[1,0]<stdout>:| Number of DOFs   |     823 875 |
[1,0]<stdout>:| Number of procs  |           2 |
[1,0]<stdout>:| Nb of DOFs/proc  |     411 937 |
[1,0]<stdout>:| Build mesh       |       10.52 |
[1,0]<stdout>:| Model            |        0.50 |
[1,0]<stdout>:| Material         |        0.04 |
[1,0]<stdout>:| Boundary conditions |        0.15 |
[1,0]<stdout>:| Create matrix    |        1.22 |
[1,0]<stdout>:| Numbering        |        1.17 |
[1,0]<stdout>:| Assembly         |        0.50 |
[1,0]<stdout>:| Build RHS        |        0.05 |
[1,0]<stdout>:| Factorize        |        6.06 |
[1,0]<stdout>:| Solve            |        1.71 |
[1,0]<stdout>:| Total            |       21.93 |
[1,0]<stdout>:
[1,0]<stdout>:.. _stg1_txt72
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Commande #0015 de /opt/aster/install/mpi/lib/aster/code_aster/CodeCommands/fin.py, ligne 72
[1,1]<stdout>:FIN(INFO_RESU='NON',
[1,1]<stdout>:    RETASSAGE='NON')
[1,1]<stdout>:
[1,0]<stdout>:FIN(INFO_RESU='NON',
[1,0]<stdout>:    RETASSAGE='NON')
[1,0]<stdout>:
[1,1]<stdout>:No database in results, objects not saved on processor #1
[1,0]<stdout>:No database in results, objects not saved on processor #0
[1,0]<stdout>:****************************************************************************************************************************************************************
[1,0]<stdout>:***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
[1,0]<stdout>:****************************************************************************************************************************************************************
[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------ PETSc Performance Summary: ------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:petsc_aster on a  named 8b87b9d0b29a with 2 processors, by Unknown Thu Jan 23 16:29:24 2025
[1,0]<stdout>:Using 1 OpenMP threads
[1,0]<stdout>:Using Petsc Release Version 3.20.5, unknown 
[1,0]<stdout>:
[1,0]<stdout>:                         Max       Max/Min     Avg       Total
[1,0]<stdout>:Time (sec):           2.195e+01     1.000   2.195e+01
[1,0]<stdout>:Objects:              0.000e+00     0.000   0.000e+00
[1,0]<stdout>:Flops:                1.109e+10     1.003   1.108e+10  2.215e+10
[1,0]<stdout>:Flops/sec:            5.054e+08     1.003   5.046e+08  1.009e+09
[1,0]<stdout>:MPI Msg Count:        6.405e+02     1.000   6.405e+02  1.281e+03
[1,0]<stdout>:MPI Msg Len (bytes):  4.258e+07     1.000   6.647e+04  8.515e+07
[1,0]<stdout>:MPI Reductions:       8.700e+02     1.000
[1,0]<stdout>:
[1,0]<stdout>:Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
[1,0]<stdout>:                            e.g., VecAXPY() for real vectors of length N --> 2N flops
[1,0]<stdout>:                            and VecAXPY() for complex vectors of length N --> 8N flops
[1,0]<stdout>:
[1,0]<stdout>:Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
[1,0]<stdout>:                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
[1,0]<stdout>: 0:      Main Stage: 2.1949e+01 100.0%  2.2150e+10 100.0%  1.281e+03 100.0%  6.647e+04      100.0%  8.520e+02  97.9%
[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,0]<stdout>:See the 'Profiling' chapter of the users' manual for details on interpreting output.
[1,0]<stdout>:Phase summary info:
[1,0]<stdout>:   Count: number of times phase was executed
[1,0]<stdout>:   Time and Flop: Max - maximum over all processors
[1,0]<stdout>:                  Ratio - ratio of maximum to minimum over all processors
[1,0]<stdout>:   Mess: number of messages sent
[1,0]<stdout>:   AvgLen: average message length (bytes)
[1,0]<stdout>:   Reduct: number of global reductions
[1,0]<stdout>:   Global: entire computation
[1,0]<stdout>:   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
[1,0]<stdout>:      %T - percent time in this phase         %F - percent flop in this phase
[1,0]<stdout>:      %M - percent messages in this phase     %L - percent message lengths in this phase
[1,0]<stdout>:      %R - percent reductions in this phase
[1,0]<stdout>:   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,0]<stdout>:Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total[1,0]<stdout>:
[1,0]<stdout>:                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:--- Event Stage 0: Main Stage
[1,0]<stdout>:
[1,0]<stdout>:BuildTwoSided        239 1.0 2.2066e-02 3.1 0.00e+00 0.0 1.1e+02 4.0e+00 2.4e+02  0  0  9  0 27   0  0  9  0 28     0[1,0]<stdout>:
[1,0]<stdout>:BuildTwoSidedF       182 1.0 2.1889e-02 3.1 0.00e+00 0.0 5.8e+01 2.7e+05 1.8e+02  0  0  5 19 21   0  0  5 19 21     0[1,0]<stdout>:
[1,0]<stdout>:MatMult              276 1.0 1.5341e+00 1.0 6.24e+09 1.0 5.5e+02 4.0e+04 0.0e+00  7 56 43 26  0   7 56 43 26  0  8135[1,0]<stdout>:
[1,0]<stdout>:MatMultAdd            52 1.0 6.4774e-02 1.0 2.69e+08 1.0 9.1e+01 4.4e+03 0.0e+00  0  2  7  0  0   0  2  7  0  0  8304[1,0]<stdout>:
[1,0]<stdout>:MatMultTranspose      52 1.0 1.0022e-01 1.0 2.69e+08 1.0 9.1e+01 4.4e+03 0.0e+00  0  2  7  0  0   0  2  7  0  0  5367[1,0]<stdout>:
[1,0]<stdout>:MatSolve              13 0.0 2.3469e-05 0.0 8.58e+02 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0    37[1,0]<stdout>:
[1,0]<stdout>:MatLUFactorSym         1 1.0 5.9590e-06 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:MatLUFactorNum         1 1.0 5.4890e-06 5.8 1.29e+02 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0    24[1,0]<stdout>:
[1,0]<stdout>:MatConvert             1 1.0 9.2512e-03 1.0 0.00e+00 0.0 4.0e+00 8.8e+03 1.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:MatScale               8 1.0 2.6292e-02 1.0 2.07e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  1574[1,0]<stdout>:
[1,0]<stdout>:MatResidual           52 1.0 2.3546e-01 1.0 9.37e+08 1.0 1.0e+02 3.3e+04 0.0e+00  1  8  8  4  0   1  8  8  4  0  7954[1,0]<stdout>:
[1,0]<stdout>:MatAssemblyBegin      98 1.0 4.5247e-02 1.7 0.00e+00 0.0 5.8e+01 2.7e+05 5.1e+01  0  0  5 19  6   0  0  5 19  6     0[1,0]<stdout>:
[1,0]<stdout>:MatAssemblyEnd        98 1.0 1.7420e-01 1.0 4.18e+05 1.3 1.2e+02 2.5e+03 2.1e+02  1  0  9  0 24   1  0  9  0 25     4[1,0]<stdout>:
[1,0]<stdout>:MatGetRowIJ            1 0.0 1.4610e-06 0.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:MatCreateSubMat        2 1.0 1.4869e-04 1.0 0.00e+00 0.0 7.0e+00 7.7e+01 3.0e+01  0  0  1  0  3   0  0  1  0  4     0[1,0]<stdout>:
[1,0]<stdout>:MatGetOrdering         1 0.0 1.8952e-05 0.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:MatCoarsen             4 1.0 1.2221e-01 1.0 9.47e+06 1.0 1.4e+02 4.1e+03 1.6e+02  1  0 11  1 19   1  0 11  1 19   155[1,0]<stdout>:
[1,0]<stdout>:MatZeroEntries         5 1.0 5.6266e-03 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:MatAXPY                8 1.0 1.6855e-01 1.0 6.26e+06 1.0 1.6e+01 2.5e+03 2.8e+01  1  0  1  0  3   1  0  1  0  3    74[1,0]<stdout>:
[1,0]<stdout>:MatTranspose          18 1.0 9.4866e-02 1.0 0.00e+00 0.0 8.4e+01 2.0e+04 7.2e+01  0  0  7  2  8   0  0  7  2  8     0[1,0]<stdout>:
[1,0]<stdout>:MatMatMultSym         15 1.0 9.3434e-01 1.0 0.00e+00 0.0 4.3e+01 5.9e+04 5.0e+01  4  0  3  3  6   4  0  3  3  6     0[1,0]<stdout>:
[1,0]<stdout>:MatMatMultNum         15 1.0 7.9189e-01 1.0 1.80e+09 1.0 9.0e+00 1.8e+05 5.0e+00  4 16  1  2  1   4 16  1  2  1  4513[1,0]<stdout>:
[1,0]<stdout>:MatPtAPSymbolic        5 1.0 1.9737e+00 1.0 0.00e+00 0.0 5.4e+01 3.2e+05 3.5e+01  9  0  4 20  4   9  0  4 20  4     0[1,0]<stdout>:
[1,0]<stdout>:MatPtAPNumeric         5 1.0 1.4491e+00 1.0 3.31e+09 1.0 3.2e+01 4.2e+05 3.0e+01  7 30  2 16  3   7 30  2 16  4  4537[1,0]<stdout>:
[1,0]<stdout>:MatGetLocalMat        15 1.0 6.9873e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:MatGetBrAoCol         15 1.0 9.5583e-03 1.0 0.00e+00 0.0 6.6e+01 2.7e+05 0.0e+00  0  0  5 21  0   0  0  5 21  0     0[1,0]<stdout>:
[1,0]<stdout>:VecMDot               56 1.0 2.1622e-02 1.0 1.32e+08 1.0 0.0e+00 0.0e+00 5.6e+01  0  1  0  0  6   0  1  0  0  7 12182[1,0]<stdout>:
[1,0]<stdout>:VecNorm               77 1.0 7.2443e-03 1.0 3.66e+07 1.0 0.0e+00 0.0e+00 7.7e+01  0  0  0  0  9   0  0  0  0  9 10093[1,0]<stdout>:
[1,0]<stdout>:VecScale              61 1.0 2.7295e-03 1.0 1.17e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  8564[1,0]<stdout>:
[1,0]<stdout>:VecCopy              175 1.0 9.7734e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:VecSet               184 1.0 2.3880e-03 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:VecAXPY               18 1.0 2.9672e-03 1.0 1.24e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  8349[1,0]<stdout>:
[1,0]<stdout>:VecAYPX              327 1.0 2.7098e-02 1.0 5.06e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  3725[1,0]<stdout>:
[1,0]<stdout>:VecAXPBYCZ           104 1.0 1.1182e-02 1.0 5.55e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  9902[1,0]<stdout>:
[1,0]<stdout>:VecMAXPY              74 1.0 3.5738e-02 1.0 2.26e+08 1.0 0.0e+00 0.0e+00 0.0e+00  0  2  0  0  0   0  2  0  0  0 12642[1,0]<stdout>:
[1,0]<stdout>:VecAssemblyBegin     132 1.0 5.8136e-04 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 1.3e+02  0  0  0  0 15   0  0  0  0 15     0[1,0]<stdout>:
[1,0]<stdout>:VecAssemblyEnd       132 1.0 5.0496e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:VecPointwiseMult     252 1.0 2.0646e-02 1.0 2.69e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  2599[1,0]<stdout>:
[1,0]<stdout>:VecScatterBegin      511 1.0 2.5736e-03 1.0 0.00e+00 0.0 8.6e+02 2.7e+04 0.0e+00  0  0 68 28  0   0  0 68 28  0     0[1,0]<stdout>:
[1,0]<stdout>:VecScatterEnd        511 1.0 1.8784e-02 1.3 2.82e+04 1.3 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     3[1,0]<stdout>:
[1,0]<stdout>:VecNormalize          47 1.0 3.8319e-03 1.0 1.78e+07 1.0 0.0e+00 0.0e+00 4.7e+01  0  0  0  0  5   0  0  0  0  6  9270[1,0]<stdout>:
[1,0]<stdout>:SFSetGraph            57 1.0 2.9154e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:SFSetUp               57 1.0 1.1795e-03 1.0 0.00e+00 0.0 1.7e+02 2.5e+03 5.7e+01  0  0 13  0  7   0  0 13  0  7     0[1,0]<stdout>:
[1,0]<stdout>:SFBcastBegin          19 1.0 6.5656e-05 1.0 0.00e+00 0.0 3.8e+01 4.9e+03 0.0e+00  0  0  3  0  0   0  0  3  0  0     0[1,0]<stdout>:
[1,0]<stdout>:SFBcastEnd            19 1.0 2.3349e-04 2.9 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:SFReduceBegin          8 1.0 3.3551e-05 1.0 0.00e+00 0.0 1.2e+01 3.4e+03 0.0e+00  0  0  1  0  0   0  0  1  0  0     0[1,0]<stdout>:
[1,0]<stdout>:SFReduceEnd            8 1.0 2.7896e-05 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:SFPack               538 1.0 1.6013e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:SFUnpack             538 1.0 1.4277e-04 1.1 2.82e+04 1.3 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0   349[1,0]<stdout>:
[1,0]<stdout>:KSPSetUp              11 1.0 1.1895e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,0]<stdout>:KSPSolve               1 1.0 1.6817e+00 1.0 6.40e+09 1.0 6.5e+02 3.1e+04 5.5e+01  8 58 51 24  6   8 58 51 24  6  7613[1,0]<stdout>:
[1,0]<stdout>:KSPGMRESOrthog        53 1.0 3.9175e-02 1.0 2.44e+08 1.0 0.0e+00 0.0e+00 5.3e+01  0  2  0  0  6   0  2  0  0  6 12438[1,0]<stdout>:
[1,0]<stdout>:PCSetUp_GAMG+          1 1.0 5.1096e+00 1.0 4.60e+09 1.0 5.8e+02 7.0e+04 6.8e+02 23 41 46 48 78  23 41 46 48 80  1794[1,0]<stdout>:
[1,0]<stdout>: PCGAMGCreateG         4 1.0 4.0898e-01 1.0 3.70e+06 1.0 8.8e+01 1.9e+04 1.0e+02  2  0  7  2 11   2  0  7  2 12    18[1,0]<stdout>:
[1,0]<stdout>: GAMG Coarsen          4 1.0 1.3220e-01 1.0 9.47e+06 1.0 1.4e+02 4.1e+03 1.6e+02  1  0 11  1 19   1  0 11  1 19   143[1,0]<stdout>:
[1,0]<stdout>:  GAMG MIS/Agg         4 1.0 1.2222e-01 1.0 9.47e+06 1.0 1.4e+02 4.1e+03 1.6e+02  1  0 11  1 19   1  0 11  1 19   155[1,0]<stdout>:
[1,0]<stdout>: PCGAMGProl            4 1.0 1.2182e-01 1.0 0.00e+00 0.0 1.5e+02 7.5e+03 1.7e+02  1  0 11  1 20   1  0 11  1 20     0[1,0]<stdout>:
[1,0]<stdout>:  GAMG Prol-col        4 1.0 5.1197e-02 1.0 0.00e+00 0.0 1.3e+02 2.9e+03 1.3e+02  0  0 10  0 15   0  0 10  0 15     0[1,0]<stdout>:
[1,0]<stdout>:  GAMG Prol-lift       4 1.0 6.4168e-02 1.0 0.00e+00 0.0 1.6e+01 4.5e+04 2.4e+01  0  0  1  1  3   0  0  1  1  3     0[1,0]<stdout>:
[1,0]<stdout>: PCGAMGOptProl         4 1.0 1.0752e+00 1.0 1.29e+09 1.0 1.3e+02 5.4e+04 1.3e+02  5 12 10  8 15   5 12 10  8 15  2406[1,0]<stdout>:
[1,0]<stdout>:  GAMG smooth          4 1.0 8.4665e-01 1.0 4.56e+08 1.0 4.6e+01 8.9e+04 4.8e+01  4  4  4  5  6   4  4  4  5  6  1076[1,0]<stdout>:
[1,0]<stdout>: PCGAMGCreateL         4 1.0 3.3617e+00 1.0 3.30e+09 1.0 8.4e+01 3.7e+05 1.1e+02 15 30  7 36 12  15 30  7 36 13  1950[1,0]<stdout>:
[1,0]<stdout>:  GAMG PtAP            4 1.0 3.3615e+00 1.0 3.30e+09 1.0 7.1e+01 4.3e+05 5.2e+01 15 30  6 36  6  15 30  6 36  6  1950[1,0]<stdout>:
[1,0]<stdout>:  GAMG Reduce          1 1.0 2.4258e-04 1.0 0.00e+00 0.0 1.3e+01 9.7e+01 5.5e+01  0  0  1  0  6   0  0  1  0  6     0[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Gal l00         1 1.0 2.7459e+00 1.0 2.62e+09 1.0 2.0e+01 9.2e+05 1.3e+01 13 24  2 22  1  13 24  2 22  2  1900[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Opt l00         1 1.0 6.7096e-01 1.0 3.89e+08 1.0 1.2e+01 2.7e+05 1.1e+01  3  4  1  4  1   3  4  1  4  1  1157[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Gal l01         1 1.0 5.6255e-01 1.0 6.16e+08 1.0 2.0e+01 5.6e+05 1.3e+01  3  5  2 13  1   3  5  2 13  2  2154[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Opt l01         1 1.0 6.4431e-02 1.0 3.85e+07 1.1 1.2e+01 5.2e+04 1.1e+01  0  0  1  1  1   0  0  1  1  1  1154[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Gal l02         1 1.0 5.2790e-02 1.0 6.29e+07 1.0 2.0e+01 5.8e+04 1.3e+01  0  1  2  1  1   0  1  2  1  2  2379[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Opt l02         1 1.0 1.0318e-02 1.0 6.84e+06 1.0 1.2e+01 1.8e+04 1.1e+01  0  0  1  0  1   0  0  1  0  1  1313[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Gal l03         1 1.0 2.2661e-04 1.0 5.53e+04 1.1 1.1e+01 6.9e+02 1.3e+01  0  0  1  0  1   0  0  1  0  2   458[1,0]<stdout>:
[1,0]<stdout>:PCGAMG Opt l03         1 1.0 1.7890e-04 1.0 5.18e+04 1.1 1.0e+01 1.1e+03 1.1e+01  0  0  1  0  1   0  0  1  0  1   543[1,0]<stdout>:
[1,0]<stdout>:PCSetUp                2 1.0 5.1097e+00 1.0 4.60e+09 1.0 5.8e+02 7.0e+04 6.8e+02 23 41 46 48 78  23 41 46 48 80  1794[1,0]<stdout>:
[1,0]<stdout>:PCSetUpOnBlocks       13 1.0 9.2262e-05 1.2 1.29e+02 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     1[1,0]<stdout>:
[1,0]<stdout>:PCApply               13 1.0 1.1622e+00 1.0 4.39e+09 1.0 6.0e+02 2.4e+04 1.3e+01  5 40 47 17  1   5 40 47 17  2  7543[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:Object Type          Creations   Destructions. Reports information only for process 0.
[1,0]<stdout>:
[1,0]<stdout>:--- Event Stage 0: Main Stage
[1,0]<stdout>:
[1,0]<stdout>:           Container    32             20
[1,0]<stdout>:              Matrix   180            129
[1,0]<stdout>:      Matrix Coarsen     4              4
[1,0]<stdout>:   Matrix Null Space     1              0
[1,0]<stdout>:              Vector   421            326
[1,0]<stdout>:           Index Set   105             98
[1,0]<stdout>:   Star Forest Graph    73             56
[1,0]<stdout>:       Krylov Solver    11              4
[1,0]<stdout>:      Preconditioner    11              4
[1,0]<stdout>:         PetscRandom     4              4
[1,0]<stdout>:    Distributed Mesh     8              4
[1,0]<stdout>:     Discrete System     8              4
[1,0]<stdout>:           Weak Form     8              4
[1,0]<stdout>:              Viewer     1              0
[1,0]<stdout>:========================================================================================================================
[1,0]<stdout>:Average time to get PetscTime(): 3.92e-08
[1,0]<stdout>:Average time for MPI_Barrier(): 5.194e-07
[1,0]<stdout>:Average time for zero size MPI_Send(): 9.155e-07
[1,0]<stdout>:#PETSc Option Table entries:
[1,0]<stdout>:-ksp_monitor_true_residual[1,0]<stdout>: # (source: command line)
[1,0]<stdout>:-log_view[1,0]<stdout>: # (source: command line)
[1,0]<stdout>:-pc_gamg_verbose 2[1,0]<stdout>: # (source: code)
[1,0]<stdout>:#End of PETSc Option Table entries
[1,0]<stdout>:Compiled without FORTRAN kernels
[1,0]<stdout>:Compiled with full precision matrices (default)
[1,0]<stdout>:sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
[1,0]<stdout>:Configure options: --with-debugging=0 --with-mpi=1 --with-ssl=0 --with-x=0 --with-64-bit-indices=0 --with-mumps-lib="-L/opt/aster/20240327/gcc13-openblas-ompi4/mumps-5.6.2/lib -lzmumps -ldmumps -lmumps_common -lpord -L/opt/aster/20240327/gcc13-openblas-ompi4/scotch-7.0.4/lib -lesmumps -lptscotch -lptscotcherr -lptscotcherrexit -lscotch -lscotcherr -lscotcherrexit -L/opt/aster/20240327/gcc13-openblas-ompi4/parmetis-4.0.3_aster3/lib -lparmetis" --with-mumps-include=/opt/aster/20240327/gcc13-openblas-ompi4/mumps-5.6.2/include --with-blaslapack-lib=-lopenblas --with-scalapack-lib="-L/opt/aster/20240327/gcc13-openblas-ompi4/scalapack-2.2.0/lib -lscalapack " --with-python=1 --with-petsc4py=1 --download-ml=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/pkg-trilinos-ml-v13.2.0.tar.gz --download-sowing=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/sowing_v1.1.26-p8.tar.gz --download-hypre=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/hypre_v2.29.0.tar.gz --download-superlu=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/SuperLU_v6.0.1.tar.gz --download-slepc=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/slepc-v3.20.1.tar.gz --download-slepc-configure-arguments="--with-slepc4py --download-arpack=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/arpack_3.9.0.tar.gz" --download-hpddm=/root/codeaster-prerequisites-20240327-oss/.build-gcc13-openblas-ompi4/content/3rd/hpddm_201eecd26177f88d7bb6287251877d8013fb64d2.tar.gz --with-openmp=1 --prefix=/opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5 CC=mpicc CXX=mpicxx FC=mpif90 FCFLAGS=" -fallow-argument-mismatch" LIBS="-lgomp -lz"[1,0]<stdout>:
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:Libraries compiled on 2025-01-23 15:23:23 on buildkitsandbox 
[1,0]<stdout>:Machine characteristics: Linux-5.10.230-223.885.amzn2.aarch64-aarch64-with-glibc2.40
[1,0]<stdout>:Using PETSc directory: /opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5
[1,0]<stdout>:Using PETSc arch: 
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:Using C compiler: mpicc  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -Wno-lto-type-mismatch -Wno-stringop-overflow -fstack-protector -fvisibility=hidden -g -O  -fopenmp 
[1,0]<stdout>:Using Fortran compiler: mpif90  -fPIC -Wall -ffree-line-length-none -ffree-line-length-0 -Wno-lto-type-mismatch -Wno-unused-dummy-argument -g -O   -fopenmp   -fopenmp
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:Using include paths: -I/opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5/include -I/opt/aster/20240327/gcc13-openblas-ompi4/mumps-5.6.2/include
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:Using C linker: mpicc
[1,0]<stdout>:Using Fortran linker: mpif90
[1,0]<stdout>:Using libraries: -Wl,-rpath,/opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5/lib -L/opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5/lib -lpetsc -Wl,-rpath,/opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5/lib -L/opt/aster/20240327/gcc13-openblas-ompi4/petsc-v3.20.5/lib -L/opt/aster/20240327/gcc13-openblas-ompi4/mumps-5.6.2/lib -L/opt/aster/20240327/gcc13-openblas-ompi4/scotch-7.0.4/lib -L/opt/aster/20240327/gcc13-openblas-ompi4/parmetis-4.0.3_aster3/lib -L/opt/aster/20240327/gcc13-openblas-ompi4/scalapack-2.2.0/lib -Wl,-rpath,/usr/lib/aarch64-linux-gnu/openmpi/lib/fortran/gfortran -L/usr/lib/aarch64-linux-gnu/openmpi/lib/fortran/gfortran -Wl,-rpath,/usr/lib/gcc/aarch64-linux-gnu/13 -L/usr/lib/gcc/aarch64-linux-gnu/13 -Wl,-rpath,/usr/lib/aarch64-linux-gnu -L/usr/lib/aarch64-linux-gnu -Wl,-rpath,/lib/aarch64-linux-gnu -L/lib/aarch64-linux-gnu -lHYPRE -lzmumps -ldmumps -lmumps_common -lpord -lesmumps -lptscotch -lptscotcherr -lptscotcherrexit -lscotch -lscotcherr -lscotcherrexit -lparmetis -lscalapack -lsuperlu -lml -lopenblas -lm -lgomp -lz -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi -lopen-rte -lopen-pal -lhwloc -levent_core -levent_pthreads -lgfortran -lm -lgfortran -lm -lgfortran -lgcc_s -lstdc++ -lgomp -lz
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:WARNING! There are options you set that were not used!
[1,0]<stdout>:WARNING! could be spelling mistake, etc!
[1,0]<stdout>:There is one unused database option. It is:
[1,0]<stdout>:Option left: name:-pc_gamg_verbose value: 2 source: code
[1,1]<stdout>:
[1,1]<stdout>: ╔════════════════════════════════════════════════════════════════════════════════════════════════╗
[1,1]<stdout>: ║ <I> <CATAMESS_89>                                                                              ║
[1,1]<stdout>: ║                                                                                                ║
[1,1]<stdout>: ║ Liste des alarmes émises lors de l'exécution du calcul.                                        ║
[1,1]<stdout>: ║                                                                                                ║
[1,1]<stdout>: ║     Les alarmes que vous avez choisies d'ignorer sont précédées de (*).                        ║
[1,1]<stdout>: ║     Nombre d'occurrences pour chacune des alarmes :                                            ║
[1,1]<stdout>: ║            aucune alarme                                                                       ║
[1,1]<stdout>: ╚════════════════════════════════════════════════════════════════════════════════════════════════╝
[1,1]<stdout>:
[1,1]<stdout>:<I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".
[1,1]<stdout>:  
[1,1]<stdout>: <I> <FIN> MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :                     715.48 Mo
[1,1]<stdout>: <I> <FIN> MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :                    1079.51 Mo
[1,1]<stdout>: <I> <FIN> MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS LORS DE L'EXECUTION :    2697.29 Mo
[1,1]<stdout>:  
[1,1]<stdout>: <I>       FERMETURE DES BASES EFFECTUEE
[1,1]<stdout>:  
[1,0]<stdout>:
[1,0]<stdout>: ╔════════════════════════════════════════════════════════════════════════════════════════════════╗
[1,0]<stdout>: ║ <I> <CATAMESS_89>                                                                              ║
[1,0]<stdout>: ║                                                                                                ║
[1,0]<stdout>: ║ Liste des alarmes émises lors de l'exécution du calcul.                                        ║
[1,0]<stdout>: ║                                                                                                ║
[1,0]<stdout>: ║     Les alarmes que vous avez choisies d'ignorer sont précédées de (*).                        ║
[1,0]<stdout>: ║     Nombre d'occurrences pour chacune des alarmes :                                            ║
[1,0]<stdout>: ║            aucune alarme                                                                       ║
[1,0]<stdout>: ╚════════════════════════════════════════════════════════════════════════════════════════════════╝
[1,0]<stdout>:
[1,1]<stdout>:   STATISTIQUES CONCERNANT L'ALLOCATION DYNAMIQUE :
[1,1]<stdout>:     TAILLE CUMULEE MAXIMUM            :                 1080  Mo.
[1,1]<stdout>:     TAILLE CUMULEE LIBEREE            :                  978  Mo.
[1,1]<stdout>:     NOMBRE TOTAL D'ALLOCATIONS        :              7007363
[1,1]<stdout>:     NOMBRE TOTAL DE LIBERATIONS       :              7006796
[1,1]<stdout>:     APPELS AU MECANISME DE LIBERATION :                    0
[1,0]<stdout>:<I> <FIN> ARRET NORMAL DANS "FIN" PAR APPEL A "JEFINI".
[1,1]<stdout>:     TAILLE MEMOIRE CUMULEE RECUPEREE  :                    0  Mo.
[1,1]<stdout>:     VOLUME DES LECTURES               :                    0  Mo.
[1,1]<stdout>:     VOLUME DES ECRITURES              :                    0  Mo.
[1,1]<stdout>:  
[1,0]<stdout>:  
[1,1]<stdout>:   MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :     715.48 Mo
[1,1]<stdout>:     - IMPOSE DE NOMBREUX ACCES DISQUE
[1,0]<stdout>: <I> <FIN> MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :                     716.04 Mo
[1,1]<stdout>:     - RALENTIT LA VITESSE D'EXECUTION
[1,0]<stdout>: <I> <FIN> MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :                    1081.75 Mo
[1,1]<stdout>:   MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :    1079.51 Mo
[1,0]<stdout>: <I> <FIN> MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS LORS DE L'EXECUTION :    2704.15 Mo
[1,1]<stdout>:     - LIMITE LES ACCES DISQUE
[1,0]<stdout>:  
[1,1]<stdout>:     - AMELIORE LA VITESSE D'EXECUTION
[1,0]<stdout>: <I>       FERMETURE DES BASES EFFECTUEE
[1,1]<stdout>:   MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS     :    2697.29 Mo
[1,0]<stdout>:  
[1,1]<stdout>:     - COMPREND LA MEMOIRE CONSOMMEE PAR  JEVEUX, 
[1,0]<stdout>:   STATISTIQUES CONCERNANT L'ALLOCATION DYNAMIQUE :
[1,0]<stdout>:     TAILLE CUMULEE MAXIMUM            :                 1082  Mo.
[1,1]<stdout>:       LE SUPERVISEUR PYTHON, LES LIBRAIRIES EXTERNES
[1,0]<stdout>:     TAILLE CUMULEE LIBEREE            :                 1292  Mo.
[1,1]<stdout>:  
[1,0]<stdout>:     NOMBRE TOTAL D'ALLOCATIONS        :              9907380
[1,0]<stdout>:     NOMBRE TOTAL DE LIBERATIONS       :              9906812
[1,0]<stdout>:     APPELS AU MECANISME DE LIBERATION :                    0
[1,1]<stdout>: <I>       FIN D'EXECUTION LE : JE-23-JANV-2025 16:29:24
[1,0]<stdout>:     TAILLE MEMOIRE CUMULEE RECUPEREE  :                    0  Mo.
[1,0]<stdout>:     VOLUME DES LECTURES               :                    0  Mo.
[1,0]<stdout>:     VOLUME DES ECRITURES              :                    0  Mo.
[1,0]<stdout>:  
[1,1]<stdout>:INFO './glob.1' deleted
[1,1]<stdout>:Deleting './glob.2': [1,0]<stdout>:   MEMOIRE JEVEUX MINIMALE REQUISE POUR L'EXECUTION :     716.04 Mo
[1,0]<stdout>:     - IMPOSE DE NOMBREUX ACCES DISQUE
[1,1]<stdout>:No such file or directory
[1,0]<stdout>:     - RALENTIT LA VITESSE D'EXECUTION
[1,0]<stdout>:   MEMOIRE JEVEUX OPTIMALE REQUISE POUR L'EXECUTION :    1081.75 Mo
[1,1]<stdout>:INFO './vola.1' deleted
[1,1]<stdout>:Deleting './vola.2': [1,0]<stdout>:     - LIMITE LES ACCES DISQUE
[1,0]<stdout>:     - AMELIORE LA VITESSE D'EXECUTION
[1,0]<stdout>:   MAXIMUM DE MEMOIRE UTILISEE PAR LE PROCESSUS     :    2704.15 Mo
[1,1]<stdout>:No such file or directory
[1,0]<stdout>:     - COMPREND LA MEMOIRE CONSOMMEE PAR  JEVEUX, 
[1,0]<stdout>:       LE SUPERVISEUR PYTHON, LES LIBRAIRIES EXTERNES
[1,0]<stdout>:  
[1,0]<stdout>: <I>       FIN D'EXECUTION LE : JE-23-JANV-2025 16:29:24
[1,0]<stdout>:INFO './glob.1' deleted
[1,1]<stdout>:
[1,1]<stdout>: ********************************************************************************
[1,1]<stdout>: * COMMAND                  :       USER :     SYSTEM :   USER+SYS :    ELAPSED *
[1,1]<stdout>: ********************************************************************************
[1,1]<stdout>: * DEBUT                    :       0.01 :       0.09 :       0.10 :       0.11 *
[1,1]<stdout>: * CREA_MAILLAGE            :       1.45 :       0.22 :       1.67 :       1.67 *
[1,1]<stdout>: * AFFE_MODELE              :       0.51 :       0.00 :       0.51 :       0.51 *
[1,1]<stdout>: * DEFI_MATERIAU            :       0.02 :       0.00 :       0.02 :       0.02 *
[1,1]<stdout>: * AFFE_MATERIAU            :       0.02 :       0.00 :       0.02 :       0.02 *
[1,1]<stdout>: * AFFE_CHAR_CINE           :       0.07 :       0.00 :       0.07 :       0.07 *
[1,1]<stdout>: * AFFE_CHAR_CINE           :       0.08 :       0.00 :       0.08 :       0.08 *
[1,1]<stdout>: * CALC_MATR_ELEM           :       1.19 :       0.03 :       1.22 :       1.22 *
[1,1]<stdout>: * NUME_DDL                 :       0.69 :       0.48 :       1.17 :       1.17 *
[1,1]<stdout>: * ASSE_MATRICE             :       0.47 :       0.03 :       0.50 :       0.50 *
[1,1]<stdout>: * CREA_CHAMP               :       0.01 :       0.01 :       0.02 :       0.02 *
[1,1]<stdout>: * CALC_CHAR_CINE           :       0.02 :       0.01 :       0.03 :       0.03 *
[1,1]<stdout>: * FIN                      :       0.02 :       0.00 :       0.02 :       0.02 *
[1,1]<stdout>: *  . check syntax          :       0.00 :       0.00 :       0.00 :       0.00 *
[1,1]<stdout>: *  . fortran               :       1.93 :       0.32 :       2.25 :       2.25 *
[1,1]<stdout>: *  . cleanup               :       0.12 :       0.00 :       0.12 :       0.12 *
[1,1]<stdout>: ********************************************************************************
[1,1]<stdout>: * TOTAL_JOB                :      19.90 :       2.16 :      22.06 :      22.07 *
[1,1]<stdout>: ********************************************************************************
[1,1]<stdout>:
[1,0]<stdout>:Deleting './glob.2': No such file or directory
[1,0]<stdout>:INFO './vola.1' deleted
[1,0]<stdout>:Deleting './vola.2': [1,0]<stdout>:No such file or directory
[1,1]<stdout>:# Mémoire (Mo) :  2697.29 /  2684.71 /  1079.51 /   715.48 (VmPeak / VmSize / Optimum / Minimum)
[1,1]<stdout>:# Fin commande #0013   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,0]<stdout>:
[1,0]<stdout>: ********************************************************************************
[1,0]<stdout>: * COMMAND                  :       USER :     SYSTEM :   USER+SYS :    ELAPSED *
[1,0]<stdout>: ********************************************************************************
[1,0]<stdout>: * DEBUT                    :       0.01 :       0.09 :       0.10 :       0.11 *
[1,0]<stdout>: * DEFI_FICHIER             :       0.00 :       0.00 :       0.00 :       0.00 *
[1,0]<stdout>: * DEFI_FICHIER             :       0.00 :       0.00 :       0.00 :       0.00 *
[1,0]<stdout>: * CREA_MAILLAGE            :       1.49 :       0.18 :       1.67 :       1.68 *
[1,0]<stdout>: * AFFE_MODELE              :       0.48 :       0.00 :       0.48 :       0.48 *
[1,0]<stdout>: * DEFI_MATERIAU            :       0.02 :       0.00 :       0.02 :       0.02 *
[1,0]<stdout>: * AFFE_MATERIAU            :       0.02 :       0.00 :       0.02 :       0.02 *
[1,0]<stdout>: * AFFE_CHAR_CINE           :       0.07 :       0.00 :       0.07 :       0.07 *
[1,0]<stdout>: * AFFE_CHAR_CINE           :       0.08 :       0.00 :       0.08 :       0.08 *
[1,0]<stdout>: * CALC_MATR_ELEM           :       1.19 :       0.02 :       1.21 :       1.21 *
[1,0]<stdout>: * NUME_DDL                 :       0.77 :       0.41 :       1.18 :       1.18 *
[1,0]<stdout>: * ASSE_MATRICE             :       0.49 :       0.01 :       0.50 :       0.50 *
[1,0]<stdout>: * CREA_CHAMP               :       0.02 :       0.00 :       0.02 :       0.02 *
[1,0]<stdout>: * CALC_CHAR_CINE           :       0.03 :       0.00 :       0.03 :       0.03 *
[1,0]<stdout>: * FIN                      :       0.02 :       0.00 :       0.02 :       0.02 *
[1,0]<stdout>: *  . check syntax          :       0.00 :       0.00 :       0.00 :       0.00 *
[1,0]<stdout>: *  . fortran               :       1.95 :       0.27 :       2.22 :       2.23 *
[1,0]<stdout>: *  . cleanup               :       0.11 :       0.00 :       0.11 :       0.12 *
[1,0]<stdout>: ********************************************************************************
[1,0]<stdout>: * TOTAL_JOB                :      20.01 :       2.05 :      22.06 :      22.07 *
[1,0]<stdout>: ********************************************************************************
[1,0]<stdout>:
[1,1]<stdout>:# ----------------------------------------------------------------------------------------------
[1,0]<stdout>:# Mémoire (Mo) :  2704.15 /  2691.51 /  1081.75 /   716.04 (VmPeak / VmSize / Optimum / Minimum)
[1,0]<stdout>:# Fin commande #0015   user+syst:        0.02s (syst:        0.00s, elaps:        0.02s)
[1,0]<stdout>:# ----------------------------------------------------------------------------------------------
[1,1]<stdout>:End of the Code_Aster execution
[1,1]<stdout>:Code_Aster MPI exits normally
[1,1]<stdout>:Exited
[1,0]<stdout>:End of the Code_Aster execution
[1,0]<stdout>:Code_Aster MPI exits normally
[1,0]<stdout>:Exited
[1,1]<stdout>:
[1,1]<stdout>:EXECUTION_CODE_ASTER_EXIT_516=0
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:execution ended (command file #1): OK
[1,1]<stdout>:
[1,1]<stdout>:# ------------------------------------------------------------------------------
[1,1]<stdout>:Content of /tmp/run_aster_q244dsre/proc.1 after execution:
[1,1]<stdout>:.:
[1,1]<stdout>:total 28
[1,1]<stdout>:-rw-r--r-- 1 aster aster   201 Jan 23 16:29 516.export
[1,1]<stdout>:drwxr-xr-x 2 aster aster     6 Jan 23 16:29 REPE_IN
[1,1]<stdout>:drwxr-xr-x 2 aster aster     6 Jan 23 16:29 REPE_OUT
[1,1]<stdout>:-rw-r--r-- 1 aster aster 22317 Jan 23 16:29 fort.6
[1,1]<stdout>:-rw-r--r-- 1 aster aster     0 Jan 23 16:29 fort.8
[1,1]<stdout>:-rw-r--r-- 1 aster aster     0 Jan 23 16:29 fort.9
[1,1]<stdout>:
[1,1]<stdout>:REPE_OUT:
[1,1]<stdout>:total 0
[1,1]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:# ------------------------------------------------------------------------------
[1,1]<stdout>:Execution summary
[1,1]<stdout>:                                      cpu     system    cpu+sys    elapsed
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:Preparation of environment           0.00       0.00       0.00       0.00
[1,1]<stdout>:Execution of code_aster             20.25       2.32      22.57      22.93
[1,1]<stdout>:Copying results                      0.00       0.00       0.00       0.00
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,1]<stdout>:Total                               20.25       2.32      22.57      22.93
[1,1]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:EXECUTION_CODE_ASTER_EXIT_515=0
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:execution ended (command file #1): OK
[1,0]<stdout>:
[1,0]<stdout>:# ------------------------------------------------------------------------------
[1,0]<stdout>:Content of /tmp/run_aster_q244dsre/proc.0 after execution:
[1,0]<stdout>:.:
[1,0]<stdout>:total 64
[1,0]<stdout>:-rw-r--r-- 1 aster aster   201 Jan 23 16:29 515.export
[1,0]<stdout>:drwxr-xr-x 2 aster aster     6 Jan 23 16:29 REPE_IN
[1,0]<stdout>:drwxr-xr-x 2 aster aster     6 Jan 23 16:29 REPE_OUT
[1,0]<stdout>:-rw-r--r-- 1 aster aster 15367 Jan 23 16:29 asrun.log
[1,0]<stdout>:-rw-r--r-- 1 aster aster 44801 Jan 23 16:29 fort.6
[1,0]<stdout>:-rw-r--r-- 1 aster aster     0 Jan 23 16:29 fort.8
[1,0]<stdout>:-rw-r--r-- 1 aster aster     0 Jan 23 16:29 fort.9
[1,0]<stdout>:
[1,0]<stdout>:REPE_OUT:
[1,0]<stdout>:total 0
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:# ------------------------------------------------------------------------------
[1,0]<stdout>:Execution summary
[1,0]<stdout>:                                      cpu     system    cpu+sys    elapsed
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:Preparation of environment           0.00       0.00       0.00       0.00
[1,0]<stdout>:Execution of code_aster             20.34       2.23      22.57      22.96
[1,0]<stdout>:Copying results                      0.00       0.00       0.00       0.00
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:Total                               20.34       2.23      22.57      22.96
[1,0]<stdout>:--------------------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------
[1,0]<stdout>:--- DIAGNOSTIC JOB : OK
[1,0]<stdout>:------------------------------------------------------------
[1,0]<stdout>:
